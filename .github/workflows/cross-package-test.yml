name: CrossPackageTest

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:

jobs:
  test:
    name: Julia v${{ matrix.julia-version }} - ${{ matrix.package_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: [1]
        os: [ubuntu-latest]
        package_name: [PowerSimulations, PowerSystemCaseBuilder, PowerNetworkMatrices]
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: x64
      - uses: julia-actions/julia-buildpkg@latest
      - name: Clone ${{matrix.package_name}}
        uses: actions/checkout@v2
        with:
          repository: NREL-SIIP/${{matrix.package_name}}.jl
          path: downstream
      - name: Run the tests
        shell: julia --project=downstream {0}
        run: |
          using Pkg
          try
            # Force it to use this PR's version of the package
            Pkg.develop(PackageSpec(path="."))  # resolver may fail with main deps
            Pkg.update()
            Pkg.test()  # resolver may fail with test time deps
          catch err
            err isa Pkg.Resolve.ResolverError || rethrow()
            # If we can't resolve that means this is incompatible by SemVer, and this is fine.
            # It means we marked this as a breaking change, so we don't need to worry about
            # mistakenly introducing a breaking change as we have intentionally made one.
            @info "Not compatible with this release. No problem." exception=err
            exit(0)  # Exit immediately, as a success
          end
