{
  "auto_generated_structs": [
    {
      "struct_name": "TwoPartCost",
      "docstring": "Data Structure Operational Cost Data in two parts: fixed and variable cost.",
      "fields": [
        {
          "name": "variable",
          "comment": "variable cost",
          "null_value": "VariableCost((0.0, 0.0))",
          "data_type": "VariableCost"
        },
        {
          "name": "fixed",
          "comment": "fixed cost",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        }
      ],
      "supertype": "OperationalCost"
    },
    {
      "struct_name": "ThreePartCost",
      "docstring": "Data Structure Operational Cost Data in Three parts fixed, variable cost and start - stop costs.",
      "fields": [
        {
          "name": "variable",
          "comment": "variable cost",
          "null_value": "VariableCost((0.0, 0.0))",
          "data_type": "VariableCost"
        },
        {
          "name": "fixed",
          "comment": "fixed cost",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "start_up",
          "comment": "start-up cost",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "shut_down",
          "comment": "shut-down cost",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        }
      ],
      "supertype": "OperationalCost"
    },
    {
      "struct_name": "StorageManagementCost",
      "docstring": "Data Structure for Operational Cost Data like variable cost and start - stop costs and energy storage cost.",
      "fields": [
        {
          "name": "variable",
          "comment": "variable cost",
          "null_value": "VariableCost((0.0, 0.0))",
          "data_type": "VariableCost"
        },
        {
          "name": "fixed",
          "comment": "fixed cost",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "start_up",
          "comment": "start-up cost",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "shut_down",
          "comment": "shut-down cost",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "energy_shortage_cost",
          "comment": "Cost incurred by the model for being short of the energy target.",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "energy_surplus_cost",
          "comment": "Cost incurred by the model for surplus energy stored.",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        }
      ],
      "supertype": "OperationalCost"
    },
    {
      "struct_name": "MarketBidCost",
      "docstring": "Data Structure Operational Cost to reflect market bids of energy and ancilliary services.\nCompatible with most US Market bidding mechanisms",
      "fields": [
        {
          "name": "no_load",
          "comment": "no load cost",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "start_up",
          "comment": "start-up cost at different stages of the thermal cycle. Warm is also refered as intermediate in some markets",
          "null_value": "(hot = START_COST, warm = START_COST, cold = START_COST)",
          "data_type": "NamedTuple{(:hot, :warm, :cold), NTuple{3, Float64}}"
        },
        {
          "name": "shut_down",
          "comment": "shut-down cost",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "variable",
          "comment": "Variable Cost TimeSeriesKey",
          "null_value": "nothing",
          "data_type": "Union{Nothing, IS.TimeSeriesKey}",
          "default": "nothing"
        },
        {
          "name": "ancillary_services",
          "comment": "Bids for the ancillary services",
          "null_value": "Vector{Service}()",
          "data_type": "Vector{Service}",
          "default": "Vector{Service}()"
        }
      ],
      "supertype": "OperationalCost"
    },
    {
      "struct_name": "MultiStartCost",
      "docstring": "Data Structure Operational Cost Data which includes fixed, variable cost, multiple start up cost and stop costs.",
      "fields": [
        {
          "name": "variable",
          "comment": "variable cost",
          "null_value": "VariableCost((0.0, 0.0))",
          "data_type": "VariableCost"
        },
        {
          "name": "no_load",
          "comment": "no load cost",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "fixed",
          "comment": "fixed cost",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "start_up",
          "comment": "start-up cost",
          "null_value": "(hot = START_COST, warm = START_COST, cold = START_COST)",
          "data_type": "NamedTuple{(:hot, :warm, :cold), NTuple{3, Float64}}"
        },
        {
          "name": "shut_down",
          "comment": "shut-down cost",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        }
      ],
      "supertype": "OperationalCost"
    },
    {
      "struct_name": "Area",
      "docstring": "A collection of buses for control purposes.",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "name": "peak_active_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "default": "0.0",
          "needs_conversion": true
        },
        {
          "name": "peak_reactive_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "default": "0.0",
          "needs_conversion": true
        },
        {
          "name": "load_response",
          "null_value": "0.0",
          "data_type": "Float64",
          "default": "0.0"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AggregationTopology"
    },
    {
      "struct_name": "LoadZone",
      "docstring": "A collection of buses for electricity price analysis.",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "name": "peak_active_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "peak_reactive_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AggregationTopology"
    },
    {
      "struct_name": "Bus",
      "docstring": "A power-system bus.",
      "inner_constructor_check": "check_bus_params",
      "fields": [
        {
          "name": "number",
          "comment": "number associated with the bus",
          "null_value": "0",
          "data_type": "Int"
        },
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "comment": "the name of the bus",
          "data_type": "String"
        },
        {
          "name": "bustype",
          "comment": "bus type",
          "null_value": "nothing",
          "data_type": "Union{Nothing, BusTypes}"
        },
        {
          "name": "angle",
          "comment": "angle of the bus in radians",
          "null_value": "0.0",
          "data_type": "Union{Nothing, Float64}",
          "valid_range": {
            "min": -1.571,
            "max": 1.571
          },
          "validation_action": "error"
        },
        {
          "name": "magnitude",
          "comment": "voltage as a multiple of basevoltage",
          "null_value": "0.0",
          "data_type": "Union{Nothing, Float64}",
          "valid_range": "voltage_limits",
          "validation_action": "warn"
        },
        {
          "name": "voltage_limits",
          "comment": "limits on the voltage variation as multiples of basevoltage",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "Union{Nothing, Min_Max}"
        },
        {
          "name": "base_voltage",
          "comment": "the base voltage in kV",
          "null_value": "nothing",
          "data_type": "Union{Nothing, Float64}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "area",
          "comment": "the area containing the bus",
          "null_value": "nothing",
          "data_type": "Union{Nothing, Area}",
          "default": "nothing"
        },
        {
          "name": "load_zone",
          "comment": "the load zone containing the bus",
          "null_value": "nothing",
          "data_type": "Union{Nothing, LoadZone}",
          "default": "nothing"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Topology"
    },
    {
      "struct_name": "Arc",
      "docstring": "A topological Arc.",
      "fields": [
        {
          "name": "from",
          "comment": "The initial bus",
          "null_value": "Bus(nothing)",
          "data_type": "Bus"
        },
        {
          "name": "to",
          "comment": "The terminal bus",
          "null_value": "Bus(nothing)",
          "data_type": "Bus"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "custom_code": "get_name(arc::Arc) = (get_name ∘ get_from)(arc) * \" -> \" * (get_name ∘ get_to)(arc)",
      "supertype": "Topology"
    },
    {
      "struct_name": "Line",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "active_power_flow",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "reactive_power_flow",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "null_value": "Arc(Bus(nothing), Bus(nothing))",
          "name": "arc",
          "data_type": "Arc"
        },
        {
          "null_value": "0.0",
          "name": "r",
          "data_type": "Float64",
          "comment": "System per-unit value",
          "valid_range": {
            "min": 0,
            "max": 4
          },
          "validation_action": "warn"
        },
        {
          "null_value": "0.0",
          "name": "x",
          "data_type": "Float64",
          "comment": "System per-unit value",
          "valid_range": {
            "min": 0,
            "max": 4
          },
          "validation_action": "warn"
        },
        {
          "name": "b",
          "null_value": "(from=0.0, to=0.0)",
          "data_type": "NamedTuple{(:from, :to), Tuple{Float64, Float64}}",
          "comment": "System per-unit value",
          "valid_range": {
            "min": 0,
            "max": 100
          },
          "validation_action": "warn"
        },
        {
          "null_value": "0.0",
          "name": "rate",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "angle_limits",
          "null_value": "(min=-1.571, max=1.571)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "valid_range": {
            "min": -1.571,
            "max": 1.571
          },
          "validation_action": "error"
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "ACBranch"
    },
    {
      "struct_name": "MonitoredLine",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "active_power_flow",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "reactive_power_flow",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "null_value": "Arc(Bus(nothing), Bus(nothing))",
          "name": "arc",
          "data_type": "Arc"
        },
        {
          "null_value": "0.0",
          "name": "r",
          "data_type": "Float64",
          "comment": "System per-unit value",
          "valid_range": {
            "min": 0,
            "max": 4
          },
          "validation_action": "warn"
        },
        {
          "null_value": "0.0",
          "name": "x",
          "data_type": "Float64",
          "comment": "System per-unit value",
          "valid_range": {
            "min": 0,
            "max": 4
          },
          "validation_action": "warn"
        },
        {
          "null_value": "(from=0.0, to=0.0)",
          "name": "b",
          "data_type": "NamedTuple{(:from, :to), Tuple{Float64, Float64}}",
          "comment": "System per-unit value",
          "valid_range": {
            "min": 0,
            "max": 2
          },
          "validation_action": "warn"
        },
        {
          "name": "flow_limits",
          "null_value": "(from_to=0.0, to_from=0.0)",
          "comment": "TODO: throw warning above max SIL",
          "data_type": "NamedTuple{(:from_to, :to_from), Tuple{Float64, Float64}}",
          "needs_conversion": true
        },
        {
          "null_value": "0.0",
          "name": "rate",
          "data_type": "Float64",
          "comment": "TODO: compare to SIL (warn) (theoretical limit)",
          "needs_conversion": true
        },
        {
          "name": "angle_limits",
          "null_value": "(min=-1.571, max=1.571)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "valid_range": {
            "min": -1.571,
            "max": 1.571
          },
          "validation_action": "error"
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "ACBranch"
    },
    {
      "struct_name": "PhaseShiftingTransformer",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "active_power_flow",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "reactive_power_flow",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "null_value": "Arc(Bus(nothing), Bus(nothing))",
          "name": "arc",
          "data_type": "Arc"
        },
        {
          "null_value": "0.0",
          "name": "r",
          "data_type": "Float64",
          "comment": "System per-unit value",
          "valid_range": {
            "min": 0,
            "max": 4
          },
          "validation_action": "warn"
        },
        {
          "null_value": "0.0",
          "name": "x",
          "data_type": "Float64",
          "comment": "System per-unit value",
          "valid_range": {
            "min": -2,
            "max": 4
          },
          "validation_action": "warn"
        },
        {
          "name": "primary_shunt",
          "null_value": "0.0",
          "data_type": "Float64",
          "Comment": "System per-unit value",
          "valid_range": {
            "min": 0,
            "max": 2
          },
          "validation_action": "warn"
        },
        {
          "name": "tap",
          "null_value": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 2
          },
          "validation_action": "error"
        },
        {
          "name": "α",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": -1.571,
            "max": 1.571
          },
          "validation_action": "warn"
        },
        {
          "null_value": "0.0",
          "name": "rate",
          "data_type": "Union{Nothing, Float64}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "ACBranch"
    },
    {
      "struct_name": "TapTransformer",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "active_power_flow",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "reactive_power_flow",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "null_value": "Arc(Bus(nothing), Bus(nothing))",
          "name": "arc",
          "data_type": "Arc"
        },
        {
          "null_value": "0.0",
          "name": "r",
          "data_type": "Float64",
          "comment": "System per-unit value",
          "valid_range": {
            "min": -2,
            "max": 2
          },
          "validation_action": "warn"
        },
        {
          "null_value": "0.0",
          "name": "x",
          "data_type": "Float64",
          "comment": "System per-unit value",
          "valid_range": {
            "min": -2,
            "max": 4
          },
          "validation_action": "warn"
        },
        {
          "name": "primary_shunt",
          "null_value": "0.0",
          "data_type": "Float64",
          "comment": "System per-unit value",
          "valid_range": {
            "min": 0,
            "max": 2
          },
          "validation_action": "warn"
        },
        {
          "name": "tap",
          "null_value": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 2
          },
          "validation_action": "error"
        },
        {
          "name": "rate",
          "null_value": "0.0",
          "data_type": "Union{Nothing, Float64}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "ACBranch"
    },
    {
      "struct_name": "Transformer2W",
      "docstring": "The 2-W transformer model uses an equivalent circuit assuming the impedance is on the High Voltage Side of the transformer. The model allocates the iron losses and magnetizing susceptance to the primary side.",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "active_power_flow",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "reactive_power_flow",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "null_value": "Arc(Bus(nothing), Bus(nothing))",
          "name": "arc",
          "data_type": "Arc"
        },
        {
          "null_value": "0.0",
          "name": "r",
          "data_type": "Float64",
          "comment": "System per-unit value",
          "valid_range": {
            "min": -2,
            "max": 4
          },
          "validation_action": "warn"
        },
        {
          "null_value": "0.0",
          "name": "x",
          "data_type": "Float64",
          "comment": "System per-unit value",
          "valid_range": {
            "min": -2,
            "max": 4
          },
          "validation_action": "warn"
        },
        {
          "name": "primary_shunt",
          "null_value": "0.0",
          "data_type": "Float64",
          "comment": "System per-unit value",
          "valid_range": {
            "min": 0,
            "max": 2
          },
          "validation_action": "warn"
        },
        {
          "name": "rate",
          "null_value": "nothing",
          "data_type": "Union{Nothing, Float64}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "ACBranch"
    },
    {
      "struct_name": "HVDCLine",
      "docstring": "a High voltage DC line.",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "active_power_flow",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "null_value": "Arc(Bus(nothing), Bus(nothing))",
          "name": "arc",
          "data_type": "Arc"
        },
        {
          "name": "active_power_limits_from",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "needs_conversion": true
        },
        {
          "name": "active_power_limits_to",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "needs_conversion": true
        },
        {
          "name": "reactive_power_limits_from",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "needs_conversion": true
        },
        {
          "name": "reactive_power_limits_to",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "needs_conversion": true
        },
        {
          "name": "loss",
          "null_value": "(l0=0.0, l1=0.0)",
          "data_type": "NamedTuple{(:l0, :l1), Tuple{Float64, Float64}}"
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "DCBranch"
    },
    {
      "struct_name": "VSCDCLine",
      "docstring": "As implemented in Milano's Book, Page 397.",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "active_power_flow",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "null_value": "Arc(Bus(nothing), Bus(nothing))",
          "name": "arc",
          "data_type": "Arc"
        },
        {
          "name": "rectifier_tap_limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "rectifier_xrc",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "rectifier_firing_angle",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "inverter_tap_limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "inverter_xrc",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "inverter_firing_angle",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "DCBranch"
    },
    {
      "struct_name": "InterruptibleLoad",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "bus",
          "null_value": "Bus(nothing)",
          "data_type": "Bus"
        },
        {
          "name": "model",
          "null_value": "LoadModels.ConstantPower",
          "data_type": "LoadModels"
        },
        {
          "name": "active_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "reactive_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "max_active_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "max_reactive_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "base_power",
          "comment": "Base power of the unit in MVA",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "operation_cost",
          "null_value": "TwoPartCost(nothing)",
          "data_type": "TwoPartCost",
          "comment": "Operation Cost of Generation [`TwoPartCost`](@ref)"
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "dynamic_injector",
          "data_type": "Union{Nothing, DynamicInjection}",
          "comment": "corresponding dynamic injection device",
          "null_value": "nothing",
          "exclude_setter": true,
          "default": "nothing"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "ControllableLoad"
    },
    {
      "struct_name": "FixedAdmittance",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "bus",
          "null_value": "Bus(nothing)",
          "data_type": "Bus"
        },
        {
          "name": "Y",
          "comment": "System per-unit value",
          "null_value": "0.0",
          "data_type": "Complex{Float64}"
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "ElectricLoad"
    },
    {
      "struct_name": "PowerLoad",
      "docstring": "Data structure for a static power load.",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "bus",
          "null_value": "Bus(nothing)",
          "data_type": "Bus"
        },
        {
          "name": "model",
          "null_value": "nothing",
          "data_type": "Union{Nothing, LoadModels}"
        },
        {
          "name": "active_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "reactive_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "base_power",
          "comment": "Base power of the unit in MVA",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "max_active_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "max_reactive_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "dynamic_injector",
          "data_type": "Union{Nothing, DynamicInjection}",
          "comment": "corresponding dynamic injection device",
          "null_value": "nothing",
          "exclude_setter": true,
          "default": "nothing"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "StaticLoad"
    },
    {
      "struct_name": "HydroEnergyReservoir",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "bus",
          "null_value": "Bus(nothing)",
          "data_type": "Bus"
        },
        {
          "name": "active_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "reactive_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": "reactive_power_limits",
          "validation_action": "warn",
          "needs_conversion": true
        },
        {
          "name": "rating",
          "comment": "Thermal limited MVA Power Output of the unit. <= Capacity",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "prime_mover",
          "comment": "Prime mover technology according to EIA 923",
          "null_value": "PrimeMovers.HY",
          "data_type": "PrimeMovers"
        },
        {
          "name": "active_power_limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "needs_conversion": true
        },
        {
          "name": "reactive_power_limits",
          "validation_action": "warn",
          "null_value": "nothing",
          "data_type": "Union{Nothing, Min_Max}",
          "needs_conversion": true
        },
        {
          "name": "ramp_limits",
          "comment": "ramp up and ramp down limits in MW (in component base per unit) per minute",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "time_limits",
          "comment": "Minimum up and Minimum down time limits in hours",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "base_power",
          "comment": "Base power of the unit in MVA",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "storage_capacity",
          "comment": "Maximum storage capacity in the reservoir (units can be p.u-hr or m^3).",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "inflow",
          "comment": "Baseline inflow into the reservoir (units can be p.u. or m^3/hr)",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "initial_storage",
          "comment": "Initial storage capacity in the reservoir (units can be p.u-hr or m^3).",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "operation_cost",
          "null_value": "TwoPartCost(nothing)",
          "data_type": "OperationalCost",
          "default": "TwoPartCost(0.0, 0.0)",
          "comment": "Operation Cost of Generation [`OperationalCost`](@ref)"
        },
        {
          "name": "storage_target",
          "comment": "Storage target at the end of simulation as ratio of storage capacity.",
          "null_value": "0.0",
          "data_type": "Float64",
          "default": "1.0"
        },
        {
          "name": "conversion_factor",
          "comment": "Conversion factor from flow/volume to energy: m^3 -> p.u-hr.",
          "null_value": "0.0",
          "data_type": "Float64",
          "default": "1.0"
        },
        {
          "null_value": "INFINITE_TIME",
          "name": "time_at_status",
          "data_type": "Float64",
          "default": "INFINITE_TIME"
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "dynamic_injector",
          "data_type": "Union{Nothing, DynamicInjection}",
          "comment": "corresponding dynamic injection device",
          "null_value": "nothing",
          "exclude_setter": true,
          "default": "nothing"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "HydroGen"
    },
    {
      "struct_name": "HydroDispatch",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "bus",
          "null_value": "Bus(nothing)",
          "data_type": "Bus"
        },
        {
          "name": "active_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "reactive_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": "reactive_power_limits",
          "validation_action": "warn",
          "needs_conversion": true
        },
        {
          "name": "rating",
          "comment": "Thermal limited MVA Power Output of the unit. <= Capacity",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "prime_mover",
          "comment": "Prime mover technology according to EIA 923",
          "null_value": "PrimeMovers.HY",
          "data_type": "PrimeMovers"
        },
        {
          "name": "active_power_limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn",
          "needs_conversion": true
        },
        {
          "name": "reactive_power_limits",
          "validation_action": "warn",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:min, :max), Tuple{Float64, Float64}}}",
          "needs_conversion": true
        },
        {
          "name": "ramp_limits",
          "comment": "ramp up and ramp down limits in MW (in component base per unit) per minute",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "time_limits",
          "comment": "Minimum up and Minimum down time limits in hours",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "base_power",
          "comment": "Base power of the unit in MVA",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "operation_cost",
          "null_value": "TwoPartCost(nothing)",
          "data_type": "OperationalCost",
          "default": "TwoPartCost(0.0, 0.0)",
          "comment": "Operation Cost of Generation [`OperationalCost`](@ref)"
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "dynamic_injector",
          "data_type": "Union{Nothing, DynamicInjection}",
          "comment": "corresponding dynamic injection device",
          "null_value": "nothing",
          "exclude_setter": true,
          "default": "nothing"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "HydroGen"
    },
    {
      "struct_name": "HydroPumpedStorage",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "bus",
          "null_value": "Bus(nothing)",
          "data_type": "Bus"
        },
        {
          "name": "active_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "reactive_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "rating",
          "comment": "Thermal limited MVA Power Output of the unit. <= Capacity",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "base_power",
          "comment": "Base power of the unit in MVA",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "prime_mover",
          "comment": "Prime mover technology according to EIA 923",
          "null_value": "PrimeMovers.HY",
          "data_type": "PrimeMovers"
        },
        {
          "name": "active_power_limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn",
          "needs_conversion": true
        },
        {
          "name": "reactive_power_limits",
          "validation_action": "warn",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:min, :max), Tuple{Float64, Float64}}}",
          "needs_conversion": true
        },
        {
          "name": "ramp_limits",
          "comment": "ramp up and ramp down limits in MW (in component base per unit) per minute",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "time_limits",
          "comment": "Minimum up and Minimum down time limits in hours",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "rating_pump",
          "comment": "Thermal limited MVA Power Withdrawl of the pump. <= Capacity",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "active_power_limits_pump",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "needs_conversion": true
        },
        {
          "name": "reactive_power_limits_pump",
          "validation_action": "warn",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:min, :max), Tuple{Float64, Float64}}}",
          "needs_conversion": true
        },
        {
          "name": "ramp_limits_pump",
          "comment": "ramp up and ramp down limits in MW (in component base per unit) per minute of pump",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "time_limits_pump",
          "comment": "Minimum up and Minimum down time limits of pump in hours",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "storage_capacity",
          "comment": "Maximum storage capacity in the upper and lower reservoirs (units can be p.u-hr or m^3).",
          "null_value": "(up=0.0, down=0.0)",
          "data_type": "NamedTuple{(:up, :down), Tuple{Float64, Float64}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "inflow",
          "comment": "Baseline inflow into the upper reservoir (units can be p.u. or m^3/hr)",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "outflow",
          "comment": "Baseline outflow from the lower reservoir (units can be p.u. or m^3/hr)",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "initial_storage",
          "comment": "Initial storage capacity in the upper and lower reservoir (units can be p.u-hr or m^3).",
          "null_value": "(up=0.0, down=0.0)",
          "data_type": "NamedTuple{(:up, :down), Tuple{Float64, Float64}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "storage_target",
          "comment": "Storage target of upper reservoir at the end of simulation as ratio of storage capacity.",
          "null_value": "(up=0.0, down=0.0)",
          "data_type": "NamedTuple{(:up, :down), Tuple{Float64, Float64}}",
          "default": "(up=1.0, down=1.0)"
        },
        {
          "name": "operation_cost",
          "null_value": "TwoPartCost(nothing)",
          "data_type": "OperationalCost",
          "default": "TwoPartCost(0.0, 0.0)",
          "comment": "Operation Cost of Generation [`OperationalCost`](@ref)"
        },
        {
          "name": "pump_efficiency",
          "comment": "Efficiency of pump",
          "null_value": "0.0",
          "data_type": "Float64",
          "default": "1.0",
          "valid_range": {
            "min": 0,
            "max": 1.0
          },
          "validation_action": "warn"
        },
        {
          "name": "conversion_factor",
          "comment": "Conversion factor from flow/volume to energy: m^3 -> p.u-hr.",
          "null_value": "0.0",
          "data_type": "Float64",
          "default": "1.0"
        },
        {
          "null_value": "INFINITE_TIME",
          "name": "time_at_status",
          "data_type": "Float64",
          "default": "INFINITE_TIME"
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "dynamic_injector",
          "data_type": "Union{Nothing, DynamicInjection}",
          "comment": "corresponding dynamic injection device",
          "null_value": "nothing",
          "exclude_setter": true,
          "default": "nothing"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "HydroGen"
    },
    {
      "struct_name": "RenewableDispatch",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "bus",
          "null_value": "Bus(nothing)",
          "data_type": "Bus"
        },
        {
          "name": "active_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "reactive_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "rating",
          "comment": "Thermal limited MVA Power Output of the unit. <= Capacity",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true,
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "prime_mover",
          "comment": "Prime mover technology according to EIA 923",
          "null_value": "PrimeMovers.OT",
          "data_type": "PrimeMovers"
        },
        {
          "name": "reactive_power_limits",
          "null_value": "nothing",
          "data_type": "Union{Nothing, Min_Max}",
          "needs_conversion": true
        },
        {
          "name": "power_factor",
          "null_value": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "error"
        },
        {
          "name": "operation_cost",
          "null_value": "TwoPartCost(nothing)",
          "data_type": "TwoPartCost",
          "comment": "Operation Cost of Generation [`TwoPartCost`](@ref)"
        },
        {
          "name": "base_power",
          "comment": "Base power of the unit in MVA",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "dynamic_injector",
          "data_type": "Union{Nothing, DynamicInjection}",
          "comment": "corresponding dynamic injection device",
          "null_value": "nothing",
          "exclude_setter": true,
          "default": "nothing"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "RenewableGen"
    },
    {
      "struct_name": "RenewableFix",
      "docstring": "Data Structure for fixed renewable generation technologies.",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "bus",
          "null_value": "Bus(nothing)",
          "data_type": "Bus"
        },
        {
          "name": "active_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "reactive_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "rating",
          "comment": "Thermal limited MVA Power Output of the unit. <= Capacity",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "prime_mover",
          "comment": "Prime mover technology according to EIA 923",
          "null_value": "PrimeMovers.OT",
          "data_type": "PrimeMovers"
        },
        {
          "name": "power_factor",
          "null_value": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "error"
        },
        {
          "name": "base_power",
          "comment": "Base power of the unit in MVA",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "dynamic_injector",
          "data_type": "Union{Nothing, DynamicInjection}",
          "comment": "corresponding dynamic injection device",
          "null_value": "nothing",
          "exclude_setter": true,
          "default": "nothing"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "RenewableGen"
    },
    {
      "struct_name": "ThermalStandard",
      "docstring": "Data Structure for thermal generation technologies.",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "null_value": "false",
          "name": "status",
          "data_type": "Bool"
        },
        {
          "name": "bus",
          "null_value": "Bus(nothing)",
          "data_type": "Bus"
        },
        {
          "name": "active_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": "active_power_limits",
          "validation_action": "warn",
          "needs_conversion": true
        },
        {
          "name": "reactive_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": "reactive_power_limits",
          "validation_action": "warn",
          "needs_conversion": true
        },
        {
          "name": "rating",
          "comment": "Thermal limited MVA Power Output of the unit. <= Capacity",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "active_power_limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn",
          "needs_conversion": true
        },
        {
          "name": "reactive_power_limits",
          "null_value": "nothing",
          "data_type": "Union{Nothing, Min_Max}",
          "needs_conversion": true
        },
        {
          "name": "ramp_limits",
          "comment": "ramp up and ramp down limits in MW (in component base per unit) per minute",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "operation_cost",
          "null_value": "ThreePartCost(nothing)",
          "data_type": "OperationalCost"
        },
        {
          "name": "base_power",
          "comment": "Base power of the unit in MVA",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "time_limits",
          "comment": "Minimum up and Minimum down time limits in hours",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "default": "nothing"
        },
        {
          "name": "prime_mover",
          "comment": "Prime mover technology according to EIA 923",
          "null_value": "PrimeMovers.OT",
          "data_type": "PrimeMovers",
          "default": "PrimeMovers.OT"
        },
        {
          "name": "fuel",
          "comment": "Prime mover fuel according to EIA 923",
          "null_value": "ThermalFuels.OTHER",
          "data_type": "ThermalFuels",
          "default": "ThermalFuels.OTHER"
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "null_value": "INFINITE_TIME",
          "name": "time_at_status",
          "data_type": "Float64",
          "default": "INFINITE_TIME"
        },
        {
          "name": "dynamic_injector",
          "data_type": "Union{Nothing, DynamicInjection}",
          "comment": "corresponding dynamic injection device",
          "null_value": "nothing",
          "exclude_setter": true,
          "default": "nothing"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "ThermalGen"
    },
    {
      "struct_name": "ThermalMultiStart",
      "docstring": "Data Structure for thermal generation technologies.",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "null_value": "false",
          "name": "status",
          "data_type": "Bool"
        },
        {
          "name": "bus",
          "null_value": "Bus(nothing)",
          "data_type": "Bus"
        },
        {
          "name": "active_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": "active_power_limits",
          "validation_action": "warn",
          "needs_conversion": true
        },
        {
          "name": "reactive_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": "reactive_power_limits",
          "validation_action": "warn",
          "needs_conversion": true
        },
        {
          "name": "rating",
          "comment": "Thermal limited MVA Power Output of the unit. <= Capacity",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "prime_mover",
          "comment": "Prime mover technology according to EIA 923",
          "null_value": "PrimeMovers.OT",
          "data_type": "PrimeMovers"
        },
        {
          "name": "fuel",
          "comment": "Prime mover fuel according to EIA 923",
          "null_value": "ThermalFuels.OTHER",
          "data_type": "ThermalFuels"
        },
        {
          "name": "active_power_limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "needs_conversion": true
        },
        {
          "name": "reactive_power_limits",
          "null_value": "nothing",
          "data_type": "Union{Nothing, Min_Max}",
          "needs_conversion": true
        },
        {
          "name": "ramp_limits",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "power_trajectory",
          "comment": "Power trajectory the unit will take during the start-up and shut-down ramp process",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:startup, :shutdown), Tuple{Float64, Float64}}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "time_limits",
          "comment": "Minimum up and Minimum down time limits in hours",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "start_time_limits",
          "comment": " Time limits for start-up based on turbine temperature in hours",
          "null_value": "nothing",
          "data_type": "Union{Nothing, NamedTuple{(:hot, :warm, :cold), Tuple{Float64, Float64, Float64}}}"
        },
        {
          "name": "start_types",
          "comment": " Number of start-up based on turbine temperature",
          "null_value": "1",
          "data_type": "Int",
          "valid_range": {
            "min": 1,
            "max": 3
          },
          "validation_action": "error"
        },
        {
          "name": "operation_cost",
          "null_value": "MultiStartCost(nothing)",
          "data_type": "OperationalCost"
        },
        {
          "name": "base_power",
          "comment": "Base power of the unit in MVA",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "time_at_status",
          "null_value": "INFINITE_TIME",
          "data_type": "Float64",
          "default": "INFINITE_TIME"
        },
        {
          "name": "must_run",
          "null_value": "false",
          "data_type": "Bool",
          "default": "false"
        },
        {
          "name": "dynamic_injector",
          "data_type": "Union{Nothing, DynamicInjection}",
          "comment": "corresponding dynamic injection device",
          "null_value": "nothing",
          "exclude_setter": true,
          "default": "nothing"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "ThermalGen"
    },
    {
      "struct_name": "GenericBattery",
      "docstring": "Data structure for a generic battery",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "bus",
          "null_value": "Bus(nothing)",
          "data_type": "Bus"
        },
        {
          "name": "prime_mover",
          "comment": "Prime mover technology according to EIA 923",
          "null_value": "PrimeMovers.BA",
          "data_type": "PrimeMovers"
        },
        {
          "name": "initial_energy",
          "null_value": "0.0",
          "comment": "State of Charge of the Battery p.u.-hr",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "state_of_charge_limits",
          "null_value": "(min=0.0, max=0.0)",
          "comment": "Maximum and Minimum storage capacity in p.u.-hr",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "rating",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "active_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "input_active_power_limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "output_active_power_limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "efficiency",
          "null_value": "(in=0.0, out=0.0)",
          "data_type": "NamedTuple{(:in, :out), Tuple{Float64, Float64}}",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "reactive_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": "reactive_power_limits",
          "validation_action": "warn",
          "needs_conversion": true
        },
        {
          "name": "reactive_power_limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "Union{Nothing, Min_Max}",
          "needs_conversion": true
        },
        {
          "name": "base_power",
          "comment": "Base power of the unit in MVA",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "operation_cost",
          "null_value": "nothing",
          "default": "nothing",
          "data_type": "Union{Nothing, OperationalCost}"
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "dynamic_injector",
          "data_type": "Union{Nothing, DynamicInjection}",
          "comment": "corresponding dynamic injection device",
          "null_value": "nothing",
          "exclude_setter": true,
          "default": "nothing"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Storage"
    },
    {
      "struct_name": "BatteryEMS",
      "docstring": "Data structure for a battery compatible with energy management formulations.",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "bus",
          "null_value": "Bus(nothing)",
          "data_type": "Bus"
        },
        {
          "name": "prime_mover",
          "comment": "Prime mover technology according to EIA 923",
          "null_value": "PrimeMovers.BA",
          "data_type": "PrimeMovers"
        },
        {
          "name": "initial_energy",
          "null_value": "0.0",
          "comment": "State of Charge of the Battery p.u.-hr",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "state_of_charge_limits",
          "null_value": "(min=0.0, max=0.0)",
          "comment": "Maximum and Minimum storage capacity in p.u.-hr",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "rating",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "active_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "needs_conversion": true
        },
        {
          "name": "input_active_power_limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "output_active_power_limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error",
          "needs_conversion": true
        },
        {
          "name": "efficiency",
          "null_value": "(in=0.0, out=0.0)",
          "data_type": "NamedTuple{(:in, :out), Tuple{Float64, Float64}}",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "reactive_power",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": "reactive_power_limits",
          "validation_action": "warn",
          "needs_conversion": true
        },
        {
          "name": "reactive_power_limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "Union{Nothing, Min_Max}",
          "needs_conversion": true
        },
        {
          "name": "base_power",
          "comment": "Base power of the unit in MVA",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "operation_cost",
          "null_value": "nothing",
          "default": "nothing",
          "data_type": "Union{Nothing, OperationalCost}"
        },
        {
          "name": "storage_target",
          "comment": "Storage target at the end of simulation as ratio of storage capacity.",
          "null_value": "0.0",
          "data_type": "Float64",
          "default": "0.0"
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "dynamic_injector",
          "data_type": "Union{Nothing, DynamicInjection}",
          "comment": "corresponding dynamic injection device",
          "null_value": "nothing",
          "exclude_setter": true,
          "default": "nothing"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Storage"
    },
    {
      "struct_name": "StaticReserve",
      "docstring": "Data Structure for a proportional reserve product for system simulations.",
      "parametric": "ReserveDirection",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "time_frame",
          "comment": "the relative saturation time_frame",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "requirement",
          "comment": "the static value of required reserves in system p.u.",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Reserve{T}"
    },
    {
      "struct_name": "StaticReserveNonSpinning",
      "docstring": "Data Structure for a non-spinning reserve product for system simulations.",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "time_frame",
          "comment": "the relative saturation time_frame",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "requirement",
          "comment": "the static value of required reserves in system p.u.",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "ReserveNonSpinning"
    },
    {
      "struct_name": "StaticReserveGroup",
      "docstring": "Data Structure for a group reserve product for system simulations.",
      "parametric": "ReserveDirection",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "requirement",
          "comment": "the static value of required reserves in system p.u.",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "contributing_services",
          "comment": "Services that contribute for this requirement constraint",
          "data_type": "Vector{Service}",
          "null_value": "Vector{Service}()",
          "default": "Vector{Service}()",
          "exclude_setter": true
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Service"
    },
    {
      "struct_name": "ReserveDemandCurve",
      "docstring": "Data Structure for a operating reserve with demand curve product for system simulations.",
      "parametric": "ReserveDirection",
      "fields": [
        {
          "name": "variable",
          "comment": "Variable Cost TimeSeriesKey",
          "null_value": "nothing",
          "data_type": "Union{Nothing, IS.TimeSeriesKey}"
        },
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "time_frame",
          "comment": "the relative saturation time_frame",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Reserve{T}"
    },
    {
      "struct_name": "VariableReserve",
      "docstring": "Data Structure for the procurement products for system simulations.",
      "parametric": "ReserveDirection",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "time_frame",
          "comment": "the relative saturation time_frame",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "requirement",
          "comment": "the required quantity of the product should be scaled by a TimeSeriesData",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Reserve{T}"
    },
    {
      "struct_name": "VariableReserveNonSpinning",
      "docstring": "Data Structure for the procurement products for system simulations.",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "time_frame",
          "comment": "the relative saturation time_frame",
          "null_value": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "requirement",
          "comment": "the required quantity of the product should be scaled by a TimeSeriesData",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "ReserveNonSpinning"
    },
    {
      "struct_name": "AGC",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "bias",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "K_p",
          "comment": "PID Proportional Constant",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "K_i",
          "comment": "PID Integral Constant",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "K_d",
          "comment": "PID Derrivative Constant",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "delta_t",
          "comment": "PID Discretization period [Seconds]",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "area",
          "comment": "the area controlled by the AGC",
          "null_value": "Area(nothing)",
          "data_type": "Union{Nothing, Area}",
          "default": "nothing"
        },
        {
          "name": "initial_ace",
          "comment": "PID Discretization period [Seconds]",
          "default": "0.0",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Service"
    },
    {
      "struct_name": "Transfer",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "requirement",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "time_series_container",
          "comment": "internal time_series storage",
          "null_value": "InfrastructureSystems.TimeSeriesContainer()",
          "data_type": "InfrastructureSystems.TimeSeriesContainer",
          "default": "InfrastructureSystems.TimeSeriesContainer()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Service"
    },
    {
      "struct_name": "AVRFixed",
      "docstring": "Parameters of a AVR that returns a fixed voltage to the rotor winding",
      "fields": [
        {
          "name": "Vf",
          "comment": "Fixed voltage field applied to the rotor winding",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "Fixed AVR has no states",
          "internal_default": "Vector{Symbol}()",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "Fixed AVR has no states",
          "null_value": 0,
          "internal_default": 0,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "Fixed AVR has no states",
          "internal_default": "Vector{StateTypes}()",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "AVRSimple",
      "docstring": "Parameters of a simple proportional AVR in the derivative of EMF\ni.e. an integrator controller on EMF",
      "fields": [
        {
          "name": "Kv",
          "comment": "Proportional Gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVf: field voltage",
          "internal_default": "[:Vf]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "Fixed AVR has 1 states",
          "internal_default": 1,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "Simple AVR has 1 differential states",
          "internal_default": "[StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "SEXS",
      "docstring": "Parameters of Simplified Excitation System Model - SEXS in PSSE",
      "fields": [
        {
          "name": "Ta_Tb",
          "comment": "Ratio of lead and lag time constants",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tb",
          "comment": "Lag time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": null
          }
        },
        {
          "name": "K",
          "comment": "Gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Te",
          "comment": "Field circuit time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "V_lim",
          "comment": "Field voltage limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\tVf: Voltage field,\tVr: Lead-lag state",
          "internal_default": "[:Vf, :Vr]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "SEXS has 2 states",
          "internal_default": 2,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "SEXS has 2 differential states",
          "internal_default": "[StateTypes.Differential, StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "ESDC1A",
      "docstring": "Self-excited shunt fields with the voltage regulator operating in a mode commonly termed buck-boost. \nParameters of IEEE Std 421.5 Type DC1A Excitacion System. This model corresponds to ESDC1A in PSSE and PSLF",
      "fields": [
        {
          "name": "Tr",
          "comment": "Voltage Measurement Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "Ka",
          "comment": "Amplifier Gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 10,
            "max": 500
          },
          "validation_action": "warn"
        },
        {
          "name": "Ta",
          "comment": "Amplifier Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "Tb",
          "comment": "Regulator input Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Tc",
          "comment": "Regulator input Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Vr_lim",
          "comment": "Voltage regulator limits (regulator output) (Vi_min, Vi_max)",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Ke",
          "comment": "Exciter constant related to self-excited field",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Te",
          "comment": "Exciter time constant, integration rate associated with exciter control",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 1
          },
          "validation_action": "error"
        },
        {
          "name": "Kf",
          "comment": "Excitation control system stabilizer gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 0.3
          },
          "validation_action": "error"
        },
        {
          "name": "Tf",
          "comment": "Excitation control system stabilizer time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "switch",
          "comment": "Switch",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "error"
        },
        {
          "name": "E_sat",
          "comment": "Exciter output voltage for saturation factor: (E1, E2)",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "Se",
          "comment": "Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "saturation_coeffs",
          "comment": "Coefficients (A,B) of the function: Se(V) = B(V - A)^2/V",
          "data_type": "Tuple{Float64, Float64}",
          "null_value": "(0.0, 0.0)",
          "default": "PowerSystems.get_avr_saturation(E_sat, Se)"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVt: Terminal Voltage,\n\tVr1: input lead lag,\n\tVr2: Regulator Output,\n\tVf: Exciter Output, \n\tVr3: Rate feedback integrator",
          "internal_default": "[:Vt, :Vr1, :Vr2, :Vf, :Vr3]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "The ESDC1A has 5 states",
          "internal_default": 5,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "ESDC1A has 5 differential states",
          "internal_default": "[StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Differential, StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "ESDC2A",
      "docstring": "Is used to represent field-controlled dc commutator exciters with continuously acting voltage regulators having power supplies derived from the generator or auxiliaries bus.\nParameters of IEEE Std 421.5 Type DC2A Excitacion System. This model corresponds to ESDC2A in PSSE and PSLF",
      "fields": [
        {
          "name": "Tr",
          "comment": "Voltage Measurement Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "Ka",
          "comment": "Amplifier Gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 10,
            "max": 500
          },
          "validation_action": "warn"
        },
        {
          "name": "Ta",
          "comment": "Amplifier Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1.0
          },
          "validation_action": "warn"
        },
        {
          "name": "Tb",
          "comment": "Regulator input Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Tc",
          "comment": "Regulator input Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Vr_lim",
          "comment": "Voltage regulator limits (regulator output) (Vi_min, Vi_max)",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Ke",
          "comment": "Exciter constant related to self-excited field",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": -1.0,
            "max": 1.0
          },
          "validation_action": "warn"
        },
        {
          "name": "Te",
          "comment": "Exciter time constant, integration rate associated with exciter control",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 2.0
          },
          "validation_action": "error"
        },
        {
          "name": "Kf",
          "comment": "Excitation control system stabilizer gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.3
          },
          "validation_action": "warn"
        },
        {
          "name": "Tf",
          "comment": "Excitation control system stabilizer time constant. Appropiate Data: 5.0 <= Tf/Kf <= 15.0",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 1.5
          },
          "validation_action": "error"
        },
        {
          "name": "switch",
          "comment": "Switch",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "error"
        },
        {
          "name": "E_sat",
          "comment": "Exciter output voltage for saturation factor: (E1, E2)",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "Se",
          "comment": "Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "saturation_coeffs",
          "comment": "Coefficients (A,B) of the function: Se(V) = B(V - A)^2/V",
          "data_type": "Tuple{Float64, Float64}",
          "null_value": "(0.0, 0.0)",
          "default": "PowerSystems.get_avr_saturation(E_sat, Se)"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVt: Terminal Voltage,\n\tVr1: input lead lag,\n\tVr2: Regulator Output,\n\tVf: Exciter Output, \n\tVr3: Rate feedback integrator",
          "internal_default": "[:Vt, :Vr1, :Vr2, :Vf, :Vr3]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "The ESDC2A has 5 states",
          "internal_default": 5,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "ESDC2A has 5 differential states",
          "internal_default": "[StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Differential, StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "IEEET1",
      "docstring": "1968 IEEE type 1 excitation system model",
      "fields": [
        {
          "name": "Tr",
          "comment": "Voltage Measurement Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "Ka",
          "comment": "Amplifier Gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 10,
            "max": 500
          },
          "validation_action": "warn"
        },
        {
          "name": "Ta",
          "comment": "Amplifier Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "Vr_lim",
          "comment": "Voltage regulator limits (regulator output) (Vi_min, Vi_max)",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Ke",
          "comment": "Exciter constant related to self-excited field",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": -1,
            "max": 1
          }
        },
        {
          "name": "Te",
          "comment": "Exciter time constant, integration rate associated with exciter control",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 1
          },
          "validation_action": "error"
        },
        {
          "name": "Kf",
          "comment": "Excitation control system stabilizer gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 0.3
          },
          "validation_action": "warn"
        },
        {
          "name": "Tf",
          "comment": "Excitation control system stabilizer time constant. Appropiate Data: 5 <= Tf/Kf <= 15",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "switch",
          "comment": "Switch",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "error"
        },
        {
          "name": "E_sat",
          "comment": "Exciter output voltage for saturation factor: (E1, E2)",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "Se",
          "comment": "Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "saturation_coeffs",
          "comment": "Coefficients (A,B) of the function: Se(V) = B(V - A)^2/V",
          "data_type": "Tuple{Float64, Float64}",
          "null_value": "(0.0, 0.0)",
          "default": "PowerSystems.get_avr_saturation(E_sat, Se)"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVt: Terminal Voltage,\n\tVr: Regulator Output,\n\tVf: Exciter Output, \n\tVr3: Rate feedback integrator",
          "internal_default": "[:Vt, :Vr1, :Vf, :Vr2]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "The IEEET1 has 4 states",
          "internal_default": 4,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "IEEET1 I has 4 differential states",
          "internal_default": "[StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Differential, StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "AVRTypeI",
      "docstring": "Parameters of an Automatic Voltage Regulator Type I - Resembles IEEE Type DC1",
      "fields": [
        {
          "name": "Ka",
          "comment": "Amplifier Gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Ke",
          "comment": "Field circuit integral deviation",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Kf",
          "comment": "Stabilizer Gain in s * pu/pu",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Ta",
          "comment": "Amplifier Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Te",
          "comment": "Field Circuit Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tf",
          "comment": "Stabilizer Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tr",
          "comment": "Voltage Measurement Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Va_lim",
          "comment": "Limits for pi controler `(Va_min, Va_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Ae",
          "comment": "1st ceiling coefficient",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Be",
          "comment": "2nd ceiling coefficient",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVf: Voltage field,\n\tVr1: Amplifier State,\n\tVr2: Stabilizing Feedback State,\n\tVm: Measured voltage",
          "internal_default": "[:Vf, :Vr1, :Vr2, :Vm]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "The AVR Type I has 4 states",
          "internal_default": 4,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "AVR Type I has 4 differential states",
          "internal_default": "[StateTypes.Differential, StateTypes.Differential, StateTypes.Differential, StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "AVRTypeII",
      "docstring": "Parameters of an Automatic Voltage Regulator Type II -  Typical static exciter model",
      "fields": [
        {
          "name": "K0",
          "comment": "Regulator Gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "T1",
          "comment": "First Pole in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "T2",
          "comment": "First zero in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "T3",
          "comment": "First Pole in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "T4",
          "comment": "First zero in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Te",
          "comment": "Field Circuit Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tr",
          "comment": "Voltage Measurement Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Va_lim",
          "comment": "Limits for pi controler `(Va_min, Va_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Ae",
          "comment": "1st ceiling coefficient",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Be",
          "comment": "2nd ceiling coefficient",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVf: Voltage field,\n\tVr1: First Lead-Lag state,\n\tVr2: Second lead-lag state,\n\tVm: Measured voltage",
          "internal_default": "[:Vf, :Vr1, :Vr2, :Vm]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "AVR Type II has 4 states",
          "internal_default": 4,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "AVR Type II has 4 differential states",
          "internal_default": "[StateTypes.Differential, StateTypes.Differential, StateTypes.Differential, StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "SCRX",
      "docstring": "This exciter is based on an IEEE type SCRX solid state exciter.  The output field voltage is varied by a control system to maintain the system voltage at Vref.  Please note that this exciter model has no initialization capabilities - this means that it will respond to whatever inputs it receives regardless of the state of the machine model.",
      "fields": [
        {
          "name": "Ta_Tb",
          "comment": "Lead input constant ratio",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.05,
            "max": 0.3
          },
          "validation_action": "error"
        },
        {
          "name": "Tb",
          "comment": "Lag input constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 5,
            "max": 20
          },
          "validation_action": "error"
        },
        {
          "name": "K",
          "comment": "Regulator Gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 20,
            "max": 100
          },
          "validation_action": "warn"
        },
        {
          "name": "Te",
          "comment": "Regulator Time Constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "Efd_lim",
          "comment": "Field Voltage regulator limits (regulator output) (Efd_min, Efd_max)",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "switch",
          "comment": "Switch",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "error"
        },
        {
          "name": "rc_rfd",
          "comment": "Field current capability. Set = 0 for negative current capability. Typical value 10",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVr1: First integrator,\n\tVr2: Second integrator",
          "internal_default": "[:Vr1, :Vr2]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "SCRX has 2 states",
          "internal_default": 2,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "SCRX has 2 differential states",
          "internal_default": "[StateTypes.Differential, StateTypes.Hybrid]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "ESAC1A",
      "docstring": "This excitation systems consists of an alternator main exciter feeding its output via non-controlled rectifiers.\nThe exciter does not employ self-excitation, and the voltage regulator power is taken from a source that is not affected by external transients.\nParameters of IEEE Std 421.5 Type AC1A Excitacion System. This model corresponds to ESAC1A in PSSE and PSLF",
      "fields": [
        {
          "name": "Tr",
          "comment": "Regulator input filter time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "Tb",
          "comment": "Regulator denominator (lag) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 20
          },
          "validation_action": "warn"
        },
        {
          "name": "Tc",
          "comment": "Regulator numerator (lead) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 20
          },
          "validation_action": "warn"
        },
        {
          "name": "Ka",
          "comment": "Regulator output gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1000
          },
          "validation_action": "warn"
        },
        {
          "name": "Ta",
          "comment": "Regulator output time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          }
        },
        {
          "name": "Va_lim",
          "comment": "Limits for regulator output `(Va_min, Va_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Te",
          "comment": "Exciter field time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 2
          },
          "validation_action": "error"
        },
        {
          "name": "Kf",
          "comment": "Rate feedback excitation system stabilizer gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.3
          },
          "validation_action": "warn"
        },
        {
          "name": "Tf",
          "comment": "Rate feedback time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 1.5
          },
          "validation_action": "error"
        },
        {
          "name": "Kc",
          "comment": "Rectifier loading factor proportional to commutating reactance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "Kd",
          "comment": "Demagnetizing factor, function of exciter alternator reactances",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "Ke",
          "comment": "Exciter field proportional constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "E_sat",
          "comment": "Exciter output voltage for saturation factor: (E1, E2)",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "Se",
          "comment": "Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "Vr_lim",
          "comment": "Limits for exciter field voltage: `(Vr_min, Vr_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "saturation_coeffs",
          "comment": "Coefficients (A,B) of the function: Se(x) = B(x - A)^2/x",
          "data_type": "Tuple{Float64, Float64}",
          "null_value": "(0.0, 0.0)",
          "default": "PowerSystems.get_avr_saturation(E_sat, Se)"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVm: Sensed terminal voltage,\n\tVr1: Lead-lag state,\n\tVr2: Regulator output state,\n\tVe: Integrator output state,\n\tVr3: Feedback output state",
          "internal_default": "[:Vm, :Vr1, :Vr2, :Ve, :Vr3]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "ESAC1A has 5 states",
          "internal_default": 5,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "ESAC1A has 5 states",
          "internal_default": "[StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Differential, StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "EXAC1A",
      "docstring": "Modified ESAC1A. This excitation systems consists of an alternator main exciter feeding its output via non-controlled rectifiers.\nThe exciter does not employ self-excitation, and the voltage regulator power is taken from a source that is not affected by external transients.\nParameters of IEEE Std 421.5 Type AC1A Excitacion System. EXAC1A in PSSE and PSLF",
      "fields": [
        {
          "name": "Tr",
          "comment": "Regulator input filter time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "Tb",
          "comment": "Regulator denominator (lag) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 20
          },
          "validation_action": "warn"
        },
        {
          "name": "Tc",
          "comment": "Regulator numerator (lead) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 20
          },
          "validation_action": "warn"
        },
        {
          "name": "Ka",
          "comment": "Regulator output gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1000
          },
          "validation_action": "warn"
        },
        {
          "name": "Ta",
          "comment": "Regulator output time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          }
        },
        {
          "name": "Va_lim",
          "comment": "Limits for regulator output `(Va_min, Va_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Te",
          "comment": "Exciter field time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 2
          },
          "validation_action": "error"
        },
        {
          "name": "Kf",
          "comment": "Rate feedback excitation system stabilizer gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.3
          },
          "validation_action": "warn"
        },
        {
          "name": "Tf",
          "comment": "Rate feedback time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 1.5
          },
          "validation_action": "error"
        },
        {
          "name": "Kc",
          "comment": "Rectifier loading factor proportional to commutating reactance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "Kd",
          "comment": "Demagnetizing factor, function of exciter alternator reactances",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "Ke",
          "comment": "Exciter field proportional constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          }
        },
        {
          "name": "E_sat",
          "comment": "Exciter output voltage for saturation factor: (E1, E2)",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "Se",
          "comment": "Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "Vr_lim",
          "comment": "Limits for exciter field voltage: `(Vr_min, Vr_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "saturation_coeffs",
          "comment": "Coefficients (A,B) of the function: Se(x) = B(x - A)^2/x",
          "data_type": "Tuple{Float64, Float64}",
          "null_value": "(0.0, 0.0)",
          "default": "PowerSystems.get_avr_saturation(E_sat, Se)"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVm: Sensed terminal voltage,\n\tVr1: Lead-lag state,\n\tVr2: Regulator output state,\n\tVe: Integrator output state,\n\tVr3: Feedback output state",
          "internal_default": "[:Vm, :Vr1, :Vr2, :Ve, :Vr3]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "EXAC1A has 5 states",
          "internal_default": 5,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "EXAC1A has 5 states",
          "internal_default": "[StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Differential, StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "EXAC1",
      "docstring": "Modified ESAC1A. This excitation systems consists of an alternator main exciter feeding its output via non-controlled rectifiers.\nThe exciter does not employ self-excitation, and the voltage regulator power is taken from a source that is not affected by external transients.\nParameters of IEEE Std 421.5 Type AC1A.  EXAC1 in PSSE and PSLF",
      "fields": [
        {
          "name": "Tr",
          "comment": "Regulator input filter time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "Tb",
          "comment": "Regulator denominator (lag) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 20
          },
          "validation_action": "warn"
        },
        {
          "name": "Tc",
          "comment": "Regulator numerator (lead) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 20
          },
          "validation_action": "warn"
        },
        {
          "name": "Ka",
          "comment": "Regulator output gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1000
          }
        },
        {
          "name": "Ta",
          "comment": "Regulator output time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "Vr_lim",
          "comment": "Limits for regulator output `(Vr_min, Vr_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Te",
          "comment": "Exciter field time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 2
          },
          "validation_action": "error"
        },
        {
          "name": "Kf",
          "comment": "Rate feedback excitation system stabilizer gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.3
          },
          "validation_action": "warn"
        },
        {
          "name": "Tf",
          "comment": "Rate feedback time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 1.5
          },
          "validation_action": "error"
        },
        {
          "name": "Kc",
          "comment": "Rectifier loading factor proportional to commutating reactance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          }
        },
        {
          "name": "Kd",
          "comment": "Demagnetizing factor, function of exciter alternator reactances",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "Ke",
          "comment": "Exciter field proportional constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "E_sat",
          "comment": "Exciter output voltage for saturation factor: (E1, E2)",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "Se",
          "comment": "Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "saturation_coeffs",
          "comment": "Coefficients (A,B) of the function: Se(V) = B(V - A)^2/V",
          "data_type": "Tuple{Float64, Float64}",
          "null_value": "(0.0, 0.0)",
          "default": "PowerSystems.get_avr_saturation(E_sat, Se)"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVm: Sensed terminal voltage,\n\tVr1: Lead-lag state,\n\tVr2: Regulator output state,\n\tVe: Integrator output state,\n\tVr3: Feedback output state",
          "internal_default": "[:Vm, :Vr1, :Vr2, :Ve, :Vr3]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "EXAC1 has 5 states",
          "internal_default": 5,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "EXAC1 has 5 states",
          "internal_default": "[StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Differential, StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "EXAC2",
      "docstring": "Modified AC2. This excitation systems consists of an alternator main exciter feeding its output via non-controlled rectifiers.\nThe exciter does not employ self-excitation, and the voltage regulator power is taken from a source that is not affected by external transients.\nParameters of IEEE Std 421.5 Type AC2A Excitacion System. The alternator main exciter is used, feeding its output via non-controlled rectifiers. The Type AC2C model is similar to that of Type AC1C except for the inclusion of exciter time constant compensation and exciter field current limiting elements. EXAC2 in PSSE and PSLF.",
      "fields": [
        {
          "name": "Tr",
          "comment": "Regulator input filter time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "Tb",
          "comment": "Regulator denominator (lag) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 20
          },
          "validation_action": "warn"
        },
        {
          "name": "Tc",
          "comment": "Regulator numerator (lead) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 20
          },
          "validation_action": "warn"
        },
        {
          "name": "Ka",
          "comment": "Regulator output gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1000
          }
        },
        {
          "name": "Ta",
          "comment": "Regulator output time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "Va_lim",
          "comment": "Limits for regulator output `(Va_min, Va_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Kb",
          "comment": "Second Stage regulator gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 500
          },
          "validation_action": "error"
        },
        {
          "name": "Vr_lim",
          "comment": "Limits for exciter field voltage `(Vr_min, Vr_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Te",
          "comment": "Exciter field time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 2
          },
          "validation_action": "error"
        },
        {
          "name": "Kl",
          "comment": "Exciter field current limiter gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1.1
          },
          "validation_action": "warn"
        },
        {
          "name": "Kh",
          "comment": "Exciter field current regulator feedback gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1.1
          },
          "validation_action": "warn"
        },
        {
          "name": "Kf",
          "comment": "Rate feedback excitation system stabilizer gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.3
          },
          "validation_action": "warn"
        },
        {
          "name": "Tf",
          "comment": "Rate feedback time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "Kc",
          "comment": "Rectifier loading factor proportional to commutating reactance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "Kd",
          "comment": "Demagnetizing factor, function of exciter alternator reactances",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "Ke",
          "comment": "Exciter field proportional constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "V_lr",
          "comment": "Maximum exciter field current",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "E_sat",
          "comment": "Exciter output voltage for saturation factor: (E1, E2)",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "Se",
          "comment": "Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "saturation_coeffs",
          "comment": "Coefficients (A,B) of the function: Se(V) = B(V - A)^2/V",
          "data_type": "Tuple{Float64, Float64}",
          "null_value": "(0.0, 0.0)",
          "default": "PowerSystems.get_avr_saturation(E_sat, Se)"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVm: Sensed terminal voltage,\n\tVr1: Lead-lag state,\n\tVr2: Regulator output state,\n\tVe: Integrator output state,\n\tVr3: Feedback output state",
          "internal_default": "[:Vm, :Vr1, :Vr2, :Ve, :Vr3]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "EXAC2 has 5 states",
          "internal_default": 5,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "EXAC2 has 5 states",
          "internal_default": "[StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Differential, StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "ESAC6A",
      "docstring": "Modified AC6A. Used to represent field-controlled alternator-rectifier excitation systems with system-supplied electronic voltage regulators. \nParameters of IEEE Std 421.5 Type AC6A Excitacion System. ESAC6A in PSSE and PSLF.",
      "fields": [
        {
          "name": "Tr",
          "comment": "Regulator input filter time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "Ka",
          "comment": "Regulator output gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1000
          },
          "validation_action": "warn"
        },
        {
          "name": "Ta",
          "comment": "Regulator output lag time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "Tk",
          "comment": "Voltage Regulator lead time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "Tb",
          "comment": "Regulator denominator (lag) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 20
          },
          "validation_action": "warn"
        },
        {
          "name": "Tc",
          "comment": "Regulator numerator (lead) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 20
          },
          "validation_action": "warn"
        },
        {
          "name": "Va_lim",
          "comment": "Limits for regulator output `(Va_min, Va_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Vr_lim",
          "comment": "Limits for exciter field voltage `(Vr_min, Vr_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Te",
          "comment": "Exciter field time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 2.0
          },
          "validation_action": "error"
        },
        {
          "name": "VFE_lim",
          "comment": "Exciter field current limiter reference",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": -5,
            "max": 20
          },
          "validation_action": "warn"
        },
        {
          "name": "Kh",
          "comment": "Exciter field current regulator feedback gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 100
          },
          "validation_action": "warn"
        },
        {
          "name": "VH_max",
          "comment": "Exciter field current limiter maximum output",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 100
          },
          "validation_action": "warn"
        },
        {
          "name": "Th",
          "comment": "Exciter field current limiter denominator (lag) time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          }
        },
        {
          "name": "Tj",
          "comment": "Exciter field current limiter numerator (lead) time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "Kc",
          "comment": "Rectifier loading factor proportional to commutating reactance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          }
        },
        {
          "name": "Kd",
          "comment": "Demagnetizing factor, function of exciter alternator reactances",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 2
          },
          "validation_action": "warn"
        },
        {
          "name": "Ke",
          "comment": "Exciter field proportional constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 2
          },
          "validation_action": "warn"
        },
        {
          "name": "E_sat",
          "comment": "Exciter output voltage for saturation factor: (E1, E2)",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "Se",
          "comment": "Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "saturation_coeffs",
          "comment": "Coefficients (A,B) of the function: Se(V) = B(V - A)^2/V",
          "data_type": "Tuple{Float64, Float64}",
          "null_value": "(0.0, 0.0)",
          "default": "PowerSystems.get_avr_saturation(E_sat, Se)"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVm: Sensed terminal voltage,\n\tVr1: Lead-lag state,\n\tVr2: Regulator output state,\n\tVe: Integrator output state,\n\tVr3: Feedback output state",
          "internal_default": "[:Vm, :Vr1, :Vr2, :Ve, :Vr3]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "ESAC6A has 5 states",
          "internal_default": 5,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "ESAC6A has 5 states",
          "internal_default": "[StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Differential, StateTypes.Hybrid]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "ESST1A",
      "docstring": "This excitation system supplies power through a transformer from the generator terminals and its regulated by a controlled rectifier (via thyristors).\nParameters of IEEE Std 421.5 Type ST1A Excitacion System. ESST1A in PSSE and PSLF",
      "fields": [
        {
          "name": "UEL_flags",
          "comment": "Code input for Underexcitization limiter (UEL) entry. Not supported.",
          "null_value": 1,
          "data_type": "Int",
          "valid_range": {
            "min": 1,
            "max": 3
          },
          "validation_action": "warn"
        },
        {
          "name": "PSS_flags",
          "comment": "Code input for Power System Stabilizer (PSS) or (VOS) entry.",
          "null_value": 1,
          "data_type": "Int",
          "valid_range": {
            "min": 1,
            "max": 2
          }
        },
        {
          "name": "Tr",
          "comment": "Regulator input filter time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.1
          },
          "validation_action": "warn"
        },
        {
          "name": "Vi_lim",
          "comment": "Voltage error limits (regulator input) (Vi_min, Vi_max)",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "Tc",
          "comment": "First regulator denominator (lead) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "Tb",
          "comment": "First regulator denominator (lag) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 20
          }
        },
        {
          "name": "Tc1",
          "comment": "Second regulator denominator (lead) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "Tb1",
          "comment": "Second regulator denominator (lead) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 20
          },
          "validation_action": "warn"
        },
        {
          "name": "Ka",
          "comment": "Voltage regulator gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 50,
            "max": 1000
          },
          "validation_action": "warn"
        },
        {
          "name": "Ta",
          "comment": "Voltage regulator time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "Va_lim",
          "comment": "Limits for regulator output `(Va_min, Va_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Vr_lim",
          "comment": "Limits for exciter output `(Vr_min, Vr_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Kc",
          "comment": "Rectifier loading factor proportional to commutating reactance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.3
          },
          "validation_action": "warn"
        },
        {
          "name": "Kf",
          "comment": "Rate feedback gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.3
          },
          "validation_action": "warn"
        },
        {
          "name": "Tf",
          "comment": "Rate feedback time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 1.5
          },
          "validation_action": "error"
        },
        {
          "name": "K_lr",
          "comment": "Exciter output current limiter gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 5
          },
          "validation_action": "warn"
        },
        {
          "name": "I_lr",
          "comment": "Exciter output current limit reference",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 5
          },
          "validation_action": "warn"
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVm: Sensed terminal voltage,\n\tVr1: First Lead-lag state,\n\tVr2: Second lead-lag state,\n\tVa: Regulator output state,\n\tVr3: Feedback output state",
          "internal_default": "[:Vm, :Vr1, :Vr2, :Va, :Vr3]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "ST1A has 5 states",
          "internal_default": 5,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "ST1A has 5 states",
          "internal_default": "[StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "EXPIC1",
      "docstring": "Generic Proportional/Integral Excitation System",
      "fields": [
        {
          "name": "Tr",
          "comment": "Regulator input filter time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "Ka",
          "comment": "Voltage regulator gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 1,
            "max": 500
          },
          "validation_action": "warn"
        },
        {
          "name": "Ta",
          "comment": "Voltage regulator time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "Va_lim",
          "comment": "Limits for pi controler `(Vr_min, Vr_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Ta_2",
          "comment": "Voltage regulator time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Ta_3",
          "comment": "Voltage regulator time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Ta_4",
          "comment": "Voltage regulator time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Vr_lim",
          "comment": "Voltage regulator limits (regulator output) (Vi_min, Vi_max)",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Kf",
          "comment": "Rate feedback gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.3
          },
          "validation_action": "warn"
        },
        {
          "name": "Tf_1",
          "comment": "Rate Feedback time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 15
          },
          "validation_actions": "error"
        },
        {
          "name": "Tf_2",
          "comment": "Rate Feedback time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 5
          },
          "validation_action": "warn"
        },
        {
          "name": "Efd_lim",
          "comment": "Field Voltage regulator limits (regulator output) (Efd_min, Efd_max)",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Ke",
          "comment": "Exciter constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "Te",
          "comment": "Exciter time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 2
          },
          "validation_action": "warn"
        },
        {
          "name": "E_sat",
          "comment": "Exciter output voltage for saturation factor: (E1, E2)",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "Se",
          "comment": "Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "Kp",
          "comment": "Potential source gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 5
          },
          "validation_action": "warn"
        },
        {
          "name": "Ki",
          "comment": "current source gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1.1
          }
        },
        {
          "name": "Kc",
          "comment": "Exciter regulation factor",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 2
          },
          "validation_action": "warn"
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "saturation_coeffs",
          "comment": "Coefficients (A,B) of the function: Se(V) = B(V - A)^2/V",
          "data_type": "Tuple{Float64, Float64}",
          "null_value": "(0.0, 0.0)",
          "default": "PowerSystems.get_avr_saturation(E_sat, Se)"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVm: Sensed terminal voltage,\n\tVr1: First Lead-lag state,\n\tVr2: Second regulator lead-lag state,\n\tVr2: Third regulator lead-lag state \n\tVf: Exciter output \n\tVr3: First feedback integrator,\n\tVr4: second feedback integrator",
          "internal_default": "[:Vm, :Vr1, :Vr2, :Vf, :Vr3, :Vr4]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "EXPIC1 has 6 states",
          "internal_default": 6,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "EXPIC has 6 states",
          "internal_default": "[StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Differential, StateTypes.Hybrid]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "ESST4B",
      "docstring": "In these excitation systems, voltage (and also current in compounded systems) is transformed to an appropriate level. Rectifiers, either controlled or non-controlled, provide the necessary direct current for the generator field.\nParameters of IEEE Std 421.5 Type ST4B Excitacion System. ESST4B in PSSE and PSLF",
      "fields": [
        {
          "name": "Tr",
          "comment": "Regulator input filter time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "K_pr",
          "comment": "Regulator propotional gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 75
          },
          "validation_action": "warn"
        },
        {
          "name": "K_ir",
          "comment": "Regulator integral gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 75
          },
          "validation_action": "warn"
        },
        {
          "name": "Vr_lim",
          "comment": "Voltage regulator limits (Vi_min, Vi_max)",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Ta",
          "comment": "Voltage regulator time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "K_pm",
          "comment": "Voltage regulator proportional gain output",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1.2
          },
          "validation_action": "warn"
        },
        {
          "name": "K_im",
          "comment": "Voltage regulator integral gain output",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 18
          },
          "validation_action": "warn"
        },
        {
          "name": "Vm_lim",
          "comment": "Limits for inner loop output `(Vm_min, Vm_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Kg",
          "comment": "Feedback gain constant of the inner loop field regulator",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1.1
          },
          "validation_action": "warn"
        },
        {
          "name": "Kp",
          "comment": "Potential circuit (voltage) gain coefficient",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "Ki",
          "comment": "Compound circuit (current) gain coefficient",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1.1
          },
          "validation_action": "warn"
        },
        {
          "name": "VB_max",
          "comment": "Maximum available exciter voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 1,
            "max": 20
          },
          "validation_action": "warn"
        },
        {
          "name": "Kc",
          "comment": "Rectifier loading factor proportional to commutating reactance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "Xl",
          "comment": "Reactance associated with potential source",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "θp",
          "comment": "Potential circuit phase angle (degrees)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": -90,
            "max": 90
          },
          "validation_action": "error"
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "θp_rad",
          "comment": "Potential circuit phase angle (radians)",
          "null_value": 0,
          "default": "θp*π*inv(180)",
          "data_type": "Float64"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVm: Sensed terminal voltage,\n\tVt: Sensed Terminal Voltage,\n\tVr1: Regulator Integrator,\n\tVr2: Regulator Output,\n\tVm: Output integrator",
          "internal_default": "[:Vt, :Vr1, :Vr2, :Vm]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "ST4B has 4 states",
          "internal_default": 4,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "ST4B has 4 states",
          "internal_default": "[StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "EXST1",
      "docstring": "IEEE Type ST1 Excitation System (PTI version)",
      "fields": [
        {
          "name": "Tr",
          "comment": "Voltage Measurement Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Vi_lim",
          "comment": "Voltage input limits (Vi_min, Vi_max)",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Tc",
          "comment": "Numerator lead-lag (lead) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Tb",
          "comment": "Denominator lead-lag (lag) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Ka",
          "comment": "Amplifier Gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Ta",
          "comment": "Amplifier Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Vr_lim",
          "comment": "Voltage regulator limits (regulator output) (Vr_min, Vr_max)",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Kc",
          "comment": "Current field constant limiter multiplier",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Kf",
          "comment": "Excitation control system stabilizer gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 0.3
          },
          "validation_action": "warn"
        },
        {
          "name": "Tf",
          "comment": "Excitation control system stabilizer time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVm: Sensed Terminal Voltage,\n\tVrll: Lead-Lag state,\n\tVr: Regulator Output, \n\tVfb: Feedback state",
          "internal_default": "[:Vm, :Vrll, :Vr, :Vfb]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "The EXST1 has 4 states",
          "internal_default": 4,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "EX4VSA",
      "docstring": "IEEE Excitation System for Voltage Security Assesment",
      "fields": [
        {
          "name": "Iflim",
          "comment": "OEL Field current limit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "d",
          "comment": "OEL parameter d",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "f",
          "comment": "OEL parameter f",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Spar",
          "comment": "OEL parameter Spar",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "K1",
          "comment": "OEL delay time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "K2",
          "comment": "OEL parameter K2",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Oel_lim",
          "comment": "Oel integrator limits (Oel_min, Oel_max)",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "G",
          "comment": "AVR Exciter Gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Ta",
          "comment": "Numerator lead-lag (lag) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Tb",
          "comment": "Denominator lead-lag (lag) time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Te",
          "comment": "Exciter Time Constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "E_lim",
          "comment": "Voltage regulator limits (regulator output) (E_min, E_max)",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tVll: Lead-lag internal state,\n\tVex: Exciter Output, \n\toel: OEL integrator state",
          "internal_default": "[:Vll, :Vex, :oel]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "The EX4VSA has 3 states",
          "internal_default": 3,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "AVR"
    },
    {
      "struct_name": "BaseMachine",
      "docstring": "Parameters of a Classic Machine: GENCLS in PSSE and PSLF",
      "fields": [
        {
          "name": "R",
          "comment": "Resistance after EMF in machine per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd_p",
          "comment": "Reactance after EMF in machine per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "eq_p",
          "comment": "Fixed EMF behind the impedance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "BaseMachine has no states",
          "internal_default": "Vector{Symbol}()",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "BaseMachine has no states",
          "internal_default": 0,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Machine"
    },
    {
      "struct_name": "RoundRotorMachine",
      "docstring": "Parameters of 4-states round-rotor synchronous machine with quadratic/exponential saturation:\nIEEE Std 1110 §5.3.2 (Model 2.2). GENROU or GENROE model in PSSE and PSLF.",
      "fields": [
        {
          "name": "R",
          "comment": "Armature resistance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Td0_p",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Time constant of transient d-axis voltage",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Td0_pp",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Time constant of sub-transient d-axis voltage",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tq0_p",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Time constant of transient q-axis voltage",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tq0_pp",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Time constant of sub-transient q-axis voltage",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Reactance after EMF in d-axis per unit",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Reactance after EMF in q-axis per unit",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd_p",
          "comment": "Transient reactance after EMF in d-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq_p",
          "comment": "Transient reactance after EMF in q-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd_pp",
          "comment": "Sub-Transient reactance after EMF in d-axis per unit. Note: Xd_pp = Xq_pp",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xl",
          "comment": "Stator leakage reactance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Se",
          "comment": "Saturation factor at 1 and 1.2 pu flux: S(1.0) = B(|ψ_pp|-A)^2",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "γ_d1",
          "comment": "γ_d1 parameter",
          "internal_default": "(Xd_pp - Xl) / (Xd_p - Xl)",
          "data_type": "Float64"
        },
        {
          "name": "γ_q1",
          "comment": "γ_q1 parameter",
          "internal_default": "(Xd_pp - Xl) / (Xq_p - Xl)",
          "data_type": "Float64"
        },
        {
          "name": "γ_d2",
          "comment": "γ_d2 parameter",
          "internal_default": "(Xd_p - Xd_pp) / (Xd_p - Xl)^2",
          "data_type": "Float64"
        },
        {
          "name": "γ_q2",
          "comment": "γ_q2 parameter",
          "internal_default": "(Xq_p - Xd_pp) / (Xq_p - Xl)^2",
          "data_type": "Float64"
        },
        {
          "name": "γ_qd",
          "comment": "γ_qd parameter",
          "internal_default": "(Xq - Xl) / (Xd - Xl)",
          "data_type": "Float64"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\teq_p: q-axis generator voltage behind the transient reactance,\n\ted_p: d-axis generator voltage behind the transient reactance,\n\tψ_kd: flux linkage in the first equivalent damping circuit in the d-axis,\n\tψ_kq: flux linkage in the first equivalent damping circuit in the d-axis",
          "internal_default": "[:eq_p, :ed_p, :ψ_kd, :ψ_kq]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "RoundRotorMachine has 4 states",
          "internal_default": 4,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Machine"
    },
    {
      "struct_name": "SalientPoleMachine",
      "docstring": "Parameters of 3-states salient-pole synchronous machine with quadratic/exponential saturation:\nIEEE Std 1110 §5.3.1 (Model 2.1). GENSAL or GENSAE model in PSSE and PSLF.",
      "fields": [
        {
          "name": "R",
          "comment": "Armature resistance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Td0_p",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Time constant of transient d-axis voltage",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Td0_pp",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Time constant of sub-transient d-axis voltage",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tq0_pp",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Time constant of sub-transient q-axis voltage",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Reactance after EMF in d-axis per unit",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Reactance after EMF in q-axis per unit",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd_p",
          "comment": "Transient reactance after EMF in d-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd_pp",
          "comment": "Sub-Transient reactance after EMF in d-axis per unit. Note: Xd_pp = Xq_pp",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xl",
          "comment": "Stator leakage reactance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Se",
          "comment": "Saturation factor at 1 and 1.2 pu flux: Se(eq_p) = B(eq_p-A)^2",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "γ_d1",
          "comment": "γ_d1 parameter",
          "internal_default": "(Xd_pp - Xl) / (Xd_p - Xl)",
          "data_type": "Float64"
        },
        {
          "name": "γ_q1",
          "comment": "γ_q1 parameter",
          "internal_default": "(Xd_p - Xd_pp) / (Xd_p - Xl)",
          "data_type": "Float64"
        },
        {
          "name": "γ_d2",
          "comment": "γ_d2 parameter",
          "internal_default": "(Xd_p - Xd_pp) / (Xd_p - Xl)^2",
          "data_type": "Float64"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\teq_p: q-axis generator voltage behind the transient reactance,\n\tψ_kd: flux linkage in the first equivalent damping circuit in the d-axis,\n\tψq_pp: phasonf of the subtransient flux linkage in the q-axis",
          "internal_default": "[:eq_p, :ψ_kd, :ψq_pp]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "SalientPoleMachine has 3 states",
          "internal_default": 3,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Machine"
    },
    {
      "struct_name": "AndersonFouadMachine",
      "docstring": "Parameters of 6-states synchronous machine: Anderson-Fouad model",
      "fields": [
        {
          "name": "R",
          "comment": "Resistance after EMF in machine per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Reactance after EMF in d-axis per unit",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Reactance after EMF in q-axis per unit",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd_p",
          "comment": "Transient reactance after EMF in d-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq_p",
          "comment": "Transient reactance after EMF in q-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd_pp",
          "comment": "Sub-Transient reactance after EMF in d-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq_pp",
          "comment": "Sub-Transient reactance after EMF in q-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Td0_p",
          "comment": "Time constant of transient d-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tq0_p",
          "comment": "Time constant of transient q-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Td0_pp",
          "comment": "Time constant of sub-transient d-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tq0_pp",
          "comment": "Time constant of sub-transient q-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tψq: q-axis stator flux,\n\tψd: d-axis stator flux,\n\teq_p: q-axis transient voltage,\n\ted_p: d-axis transient voltage,\n\teq_pp: q-axis subtransient voltage,\n\ted_pp: d-axis subtransient voltage",
          "internal_default": "[:ψq, :ψd, :eq_p, :ed_p, :eq_pp, :ed_pp]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "AndersonFouadMachine has 6 states",
          "internal_default": 6,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Machine"
    },
    {
      "struct_name": "FullMachine",
      "docstring": "Parameter of a full order flux stator-rotor model without zero sequence flux in the stator.\n The derivative of stator fluxes (ψd and ψq) is NOT neglected. Only one q-axis damping circuit is considered. All parameters are in machine per unit.\n Refer to Chapter 3 of Power System Stability and Control by P. Kundur or Chapter 11 of Power System Dynamics: Stability and Control, by J. Machowski, J. Bialek and J. Bumby, for more details.\n Note that the models are somewhat different (but equivalent) due to the different Park Transformation used in both books.",
      "fields": [
        {
          "name": "R",
          "comment": "Resistance after EMF in machine per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "R_f",
          "comment": "Field rotor winding resistance in per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "R_1d",
          "comment": " Damping rotor winding resistance on d-axis in per unit. This value is denoted as RD in Machowski.",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "R_1q",
          "comment": "Damping rotor winding resistance on q-axis in per unit. This value is denoted as RQ in Machowski.",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "L_d",
          "comment": "Inductance of fictitious damping that represent the effect of the three-phase stator winding in the d-axis of the rotor, in per unit. This value is denoted as L_ad + L_l in Kundur (and Ld in Machowski).",
          "null_value": 1.0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "L_q",
          "comment": "Inductance of fictitious damping that represent the effect of the three-phase stator winding in the q-axis of the rotor, in per unit. This value is denoted as L_aq + L_l in Kundur.",
          "null_value": 1.0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "L_ad",
          "comment": "Mutual inductance between stator winding and rotor field (and damping) winding inductance on d-axis, in per unit",
          "null_value": 2.0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "L_aq",
          "comment": "Mutual inductance between stator winding and rotor damping winding inductance on q-axis, in per unit",
          "null_value": 2.0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "L_f1d",
          "comment": "Mutual inductance between rotor field winding and rotor damping winding inductance on d-axis, in per unit",
          "null_value": 1.0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "L_ff",
          "comment": "Field rotor winding inductance, in per unit",
          "null_value": 2.0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "L_1d",
          "comment": "Inductance of the d-axis rotor damping circuit, in per unit",
          "null_value": 1.0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "L_1q",
          "comment": "Inductance of the q-axis rotor damping circuit, in per unit",
          "null_value": 1.0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "inv_d_fluxlink",
          "data_type": "Array{Float64,2}",
          "internal_default": "inv([[-L_d L_ad L_ad]; [-L_ad L_ff L_f1d]; [-L_ad L_f1d L_1d]])",
          "comment": "Equations 3.127, 3.130, 3.131 From Kundur"
        },
        {
          "name": "inv_q_fluxlink",
          "data_type": "Array{Float64,2}",
          "internal_default": "inv([[-L_q L_aq]; [-L_aq L_1q]])",
          "comment": "Equations 3.128, 3.132 From Kundur"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tψd: d-axis stator flux,\n\tψq: q-axis stator flux,\n\tψf: field rotor flux,\n\tψ1d: d-axis rotor damping flux,\n\tψ1q: q-axis rotor damping flux",
          "internal_default": "[:ψd, :ψq, :ψf, :ψ1d, :ψ1q]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "FullMachine has 5 states",
          "internal_default": 5,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Machine"
    },
    {
      "struct_name": "MarconatoMachine",
      "docstring": "Parameters of 6-states synchronous machine: Marconato model",
      "fields": [
        {
          "name": "R",
          "comment": "Resistance after EMF in machine per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Reactance after EMF in d-axis per unit",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Reactance after EMF in q-axis per unit",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd_p",
          "comment": "Transient reactance after EMF in d-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq_p",
          "comment": "Transient reactance after EMF in q-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd_pp",
          "comment": "Sub-Transient reactance after EMF in d-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq_pp",
          "comment": "Sub-Transient reactance after EMF in q-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Td0_p",
          "comment": "Time constant of transient d-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tq0_p",
          "comment": "Time constant of transient q-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Td0_pp",
          "comment": "Time constant of sub-transient d-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tq0_pp",
          "comment": "Time constant of sub-transient q-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "T_AA",
          "comment": "Time constant of d-axis additional leakage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "γd",
          "data_type": "Float64",
          "internal_default": "((Td0_pp*Xd_pp)/(Td0_p*Xd_p) )*(Xd-Xd_p)",
          "comment": ""
        },
        {
          "name": "γq",
          "data_type": "Float64",
          "internal_default": "((Tq0_pp*Xq_pp)/(Tq0_p*Xq_p) )*(Xq-Xq_p)",
          "comment": ""
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tψq: q-axis stator flux,\n\tψd: d-axis stator flux,\n\teq_p: q-axis transient voltage,\n\ted_p: d-axis transient voltage,\n\teq_pp: q-axis subtransient voltage,\n\ted_pp: d-axis subtransient voltage",
          "internal_default": "[:ψq, :ψd, :eq_p, :ed_p, :eq_pp, :ed_pp]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "MarconatoMachine has 6 states",
          "internal_default": 6,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Machine"
    },
    {
      "struct_name": "OneDOneQMachine",
      "docstring": "Parameters of 4-states synchronous machine: Simplified Marconato model\n The derivative of stator fluxes (ψd and ψq) is neglected and ωψd = ψd and\n ωψq = ψq is assumed (i.e. ω=1.0). This is standard when\n transmission network dynamics is neglected.",
      "fields": [
        {
          "name": "R",
          "comment": "Resistance after EMF in machine per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Reactance after EMF in d-axis per unit",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Reactance after EMF in q-axis per unit",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd_p",
          "comment": "Transient reactance after EMF in d-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq_p",
          "comment": "Transient reactance after EMF in q-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Td0_p",
          "comment": "Time constant of transient d-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tq0_p",
          "comment": "Time constant of transient q-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\teq_p: q-axis transient voltage,\n\ted_p: d-axis transient voltage",
          "internal_default": "[:eq_p, :ed_p]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "OneDOneQMachine has 2 states",
          "internal_default": 2,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Machine"
    },
    {
      "struct_name": "SimpleAFMachine",
      "docstring": "Parameters of 4-states simplified Anderson-Fouad (SimpleAFMachine) model.\n The derivative of stator fluxes (ψd and ψq) is neglected and ωψd = ψd and\n ωψq = ψq is assumed (i.e. ω=1.0). This is standard when transmission network\n dynamics is neglected.\n If transmission dynamics is considered use the full order Anderson Fouad model.",
      "fields": [
        {
          "name": "R",
          "comment": "Resistance after EMF in machine per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Reactance after EMF in d-axis per unit",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Reactance after EMF in q-axis per unit",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd_p",
          "comment": "Transient reactance after EMF in d-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq_p",
          "comment": "Transient reactance after EMF in q-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd_pp",
          "comment": "Sub-Transient reactance after EMF in d-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq_pp",
          "comment": "Sub-Transient reactance after EMF in q-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Td0_p",
          "comment": "Time constant of transient d-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tq0_p",
          "comment": "Time constant of transient q-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Td0_pp",
          "comment": "Time constant of sub-transient d-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tq0_pp",
          "comment": "Time constant of sub-transient q-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\teq_p: q-axis transient voltage,\n\ted_p: d-axis transient voltage,\n\teq_pp: q-axis subtransient voltage,\n\ted_pp: d-axis subtransient voltage",
          "internal_default": "[:eq_p, :ed_p, :eq_pp, :ed_pp]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "SimpleAFMachine has 4 states",
          "internal_default": 4,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Machine"
    },
    {
      "struct_name": "SimpleFullMachine",
      "docstring": "Parameter of a full order flux stator-rotor model without zero sequence flux in the stator.\n The derivative of stator fluxes (ψd and ψq) is neglected. This is standard when\n transmission network dynamics is neglected. Only one q-axis damping circuit\n is considered. All per unit are in machine per unit.\n Refer to Chapter 3 of Power System Stability and Control by P. Kundur or Chapter 11 of Power System Dynamics: Stability and Control, by J. Machowski, J. Bialek and J. Bumby, for more details.\n Note that the models are somewhat different (but equivalent) due to the different Park Transformation used in both books.",
      "fields": [
        {
          "name": "R",
          "comment": "Resistance after EMF in machine per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "R_f",
          "comment": "Field rotor winding resistance in per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "R_1d",
          "comment": " Damping rotor winding resistance on d-axis in per unit. This value is denoted as RD in Machowski.",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "R_1q",
          "comment": "Damping rotor winding resistance on q-axis in per unit. This value is denoted as RQ in Machowski.",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "L_d",
          "comment": "Inductance of fictitious damping that represent the effect of the three-phase stator winding in the d-axis of the rotor, in per unit. This value is denoted as L_ad + L_l in Kundur (and Ld in Machowski).",
          "null_value": 1.0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "L_q",
          "comment": "Inductance of fictitious damping that represent the effect of the three-phase stator winding in the q-axis of the rotor, in per unit. This value is denoted as L_aq + L_l in Kundur.",
          "null_value": 1.0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "L_ad",
          "comment": "Mutual inductance between stator winding and rotor field (and damping) winding inductance on d-axis, in per unit",
          "null_value": 2.0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "L_aq",
          "comment": "Mutual inductance between stator winding and rotor damping winding inductance on q-axis, in per unit",
          "null_value": 1.0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "L_f1d",
          "comment": "Mutual inductance between rotor field winding and rotor damping winding inductance on d-axis, in per unit",
          "null_value": 1.0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "L_ff",
          "comment": "Field rotor winding inductance, in per unit",
          "null_value": 2.0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "L_1d",
          "comment": "Inductance of the d-axis rotor damping circuit, in per unit",
          "null_value": 1.0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "L_1q",
          "comment": "Inductance of the q-axis rotor damping circuit, in per unit",
          "null_value": 2.0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "inv_d_fluxlink",
          "data_type": "Array{Float64,2}",
          "internal_default": "inv([[-L_d L_ad L_ad]; [-L_ad L_ff L_f1d]; [-L_ad L_f1d L_1d]])",
          "comment": "Equations 3.127, 3.130, 3.131 From Kundur"
        },
        {
          "name": "inv_q_fluxlink",
          "data_type": "Array{Float64,2}",
          "internal_default": "inv([[-L_q L_aq]; [-L_aq L_1q]])",
          "comment": "Equations 3.128, 3.132 From Kundur"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tψf: field rotor flux,\n\tψ1d: d-axis rotor damping flux,\n\tψ1q: q-axis rotor damping flux",
          "internal_default": "[:ψf, :ψ1d, :ψ1q]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "SimpleFullMachine has 3 states",
          "internal_default": 3,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Machine"
    },
    {
      "struct_name": "SimpleMarconatoMachine",
      "docstring": "Parameters of 4-states synchronous machine: Simplified Marconato model\n The derivative of stator fluxes (ψd and ψq) is neglected and ωψd = ψd and\n ωψq = ψq is assumed (i.e. ω=1.0). This is standard when transmission network\n dynamics is neglected.",
      "fields": [
        {
          "name": "R",
          "comment": "Resistance after EMF in machine per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Reactance after EMF in d-axis per unit",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq",
          "data_type": "Float64",
          "null_value": 0,
          "comment": "Reactance after EMF in q-axis per unit",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd_p",
          "comment": "Transient reactance after EMF in d-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq_p",
          "comment": "Transient reactance after EMF in q-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xd_pp",
          "comment": "Sub-Transient reactance after EMF in d-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Xq_pp",
          "comment": "Sub-Transient reactance after EMF in q-axis per unit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Td0_p",
          "comment": "Time constant of transient d-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tq0_p",
          "comment": "Time constant of transient q-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Td0_pp",
          "comment": "Time constant of sub-transient d-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tq0_pp",
          "comment": "Time constant of sub-transient q-axis voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "T_AA",
          "comment": "Time constant of d-axis additional leakage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "γd",
          "data_type": "Float64",
          "internal_default": "((Td0_pp*Xd_pp)/(Td0_p*Xd_p) )*(Xd-Xd_p)",
          "comment": ""
        },
        {
          "name": "γq",
          "data_type": "Float64",
          "internal_default": "((Tq0_pp*Xq_pp)/(Tq0_p*Xq_p) )*(Xq-Xq_p)",
          "comment": ""
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\teq_p: q-axis transient voltage,\n\ted_p: d-axis transient voltage,\n\teq_pp: q-axis subtransient voltage,\n\ted_pp: d-axis subtransient voltage",
          "internal_default": "[:eq_p, :ed_p, :eq_pp, :ed_pp]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "SimpleMarconatoMachine has 4 states",
          "internal_default": 4,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Machine"
    },
    {
      "struct_name": "PSSFixed",
      "docstring": "Parameters of a PSS that returns a fixed voltage to add to the reference for the AVR",
      "fields": [
        {
          "name": "V_pss",
          "comment": "Fixed voltage stabilization signal",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "",
          "internal_default": "Vector{Symbol}()",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "PSSFixed has no states",
          "internal_default": 0,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "PSS"
    },
    {
      "struct_name": "PSSSimple",
      "docstring": "Parameters of a PSS that returns a proportional droop voltage to add to the reference for the AVR",
      "fields": [
        {
          "name": "K_ω",
          "comment": "Proportional gain for frequency",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "K_p",
          "comment": "Proportional gain for active power",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "",
          "internal_default": "Vector{Symbol}()",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "PSSSimple has no states",
          "internal_default": 0,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "PSS"
    },
    {
      "struct_name": "IEEEST",
      "docstring": "IEEE Stabilizing Model PSS. ",
      "fields": [
        {
          "name": "input_code",
          "comment": "Code input for stabilizar",
          "null_value": 1,
          "data_type": "Int",
          "valid_range": {
            "min": 1,
            "max": 6
          },
          "validation_action": "error"
        },
        {
          "name": "remote_bus_control",
          "comment": "Remote  Bus number for control.",
          "null_value": 0,
          "data_type": "Int"
        },
        {
          "name": "A1",
          "comment": "Filter coefficient",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "A2",
          "comment": "Filter coefficient",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "A3",
          "comment": "Filter coefficient",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "A4",
          "comment": "Filter coefficient",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "A5",
          "comment": "Filter coefficient",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "A6",
          "comment": "Filter coefficient",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "T1",
          "comment": "Time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "T2",
          "comment": "Time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "T3",
          "comment": "Time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "T4",
          "comment": "Time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "T5",
          "comment": "Time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "T6",
          "comment": "Time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": "2.0"
          },
          "validation_action": "error"
        },
        {
          "name": "Ks",
          "comment": "Proportional gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Ls_lim",
          "comment": "PSS output limits for regulator output `(Ls_min, Ls_max)`",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "Vcu",
          "comment": "Cutoff limiter upper bound",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": "1.25"
          },
          "validation_action": "warn"
        },
        {
          "name": "Vcl",
          "comment": "Cutoff limiter lower bound",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": "1.0"
          },
          "validation_action": "warn"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tx_p1: 1st filter integration,\n\tx_p2: 2nd filter integration, \n\tx_p3: 3rd filter integration, \n\tx_p4: 4rd filter integration, \n\tx_p5: T1/T2 lead-lag integrator, \n\tx_p6: T3/T4 lead-lag integrator, \n\t:x_p7 last integer,",
          "internal_default": "[:x_p1, :x_p2, :x_p3, :x_p4, :x_p5, :x_p6, :x_p7]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "IEEEST has 7 states",
          "internal_default": 7,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "IEEEST has 7 differential states",
          "internal_default": "[StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "PSS"
    },
    {
      "struct_name": "STAB1",
      "docstring": "Speed-Sensitive Stabilizing Model",
      "fields": [
        {
          "name": "KT",
          "comment": "K/T for washout filter",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "T",
          "comment": "Time constant for washout filter",
          "null_value": 0.01,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.01,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "T1T3",
          "comment": "Time constant division T1/T3",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "T3",
          "comment": "Time constant",
          "null_value": 0.01,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.01,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "T2T4",
          "comment": "Time constant division T2/T4",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "T4",
          "comment": "Time constant",
          "null_value": 0.01,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.01,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "H_lim",
          "comment": "PSS output limit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tx_p1: washout filter,\n\tx_p2: T1/T2 lead-lag block, \n\tx_p3: T3/T4 lead-lag block,",
          "internal_default": "[:x_p1, :x_p2, :x_p3]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "STAB1 has 3 states",
          "internal_default": 3,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "STAB1 has 3 differential states",
          "internal_default": "[StateTypes.Differential, StateTypes.Differential, StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "PSS"
    },
    {
      "struct_name": "SingleMass",
      "docstring": "Parameters of single mass shaft model. Typically represents the rotor mass.",
      "fields": [
        {
          "name": "H",
          "comment": "Rotor inertia constant in MWs/MVA",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "D",
          "comment": "Rotor natural damping in pu",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tδ: rotor angle,\n\tω: rotor speed",
          "internal_default": "[:δ, :ω]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "SingleMass has 1 state",
          "internal_default": 2,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Shaft"
    },
    {
      "struct_name": "FiveMassShaft",
      "docstring": "Parameters of 5 mass-spring shaft model.\n It contains a High-Pressure (HP) steam turbine, Intermediate-Pressure (IP)\n steam turbine, Low-Pressure (LP) steam turbine, the Rotor and an Exciter (EX) mover.",
      "fields": [
        {
          "name": "H",
          "comment": "Rotor inertia constant in MWs/MVA",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "H_hp",
          "comment": "High pressure turbine inertia constant in MWs/MVA",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "H_ip",
          "comment": "Intermediate pressure turbine inertia constant in MWs/MVA",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "H_lp",
          "comment": "Low pressure turbine inertia constant in MWs/MVA",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "H_ex",
          "comment": " Exciter inertia constant in MWs/MVA",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "D",
          "comment": "Rotor natural damping in pu",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "D_hp",
          "comment": "High pressure turbine natural damping in pu",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "D_ip",
          "comment": "Intermediate pressure turbine natural damping in pu",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "D_lp",
          "comment": "Low pressure turbine natural damping in pu",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "D_ex",
          "comment": "Exciter natural damping in pu",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "D_12",
          "comment": "High-Intermediate pressure turbine damping",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "D_23",
          "comment": "Intermediate-Low pressure turbine damping",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "D_34",
          "comment": "Low pressure turbine-Rotor damping",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "D_45",
          "comment": "Rotor-Exciter damping",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "K_hp",
          "comment": "High pressure turbine angle coefficient",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "K_ip",
          "comment": "Intermediate pressure turbine angle coefficient",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "K_lp",
          "comment": "Low pressure turbine angle coefficient",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "K_ex",
          "comment": "Exciter angle coefficient",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\n\tδ: rotor angle,\n\tω: rotor speed,\n\tδ_hp: rotor angle of high pressure turbine,\n\tω_hp: rotor speed of high pressure turbine,\n\tδ_ip: rotor angle of intermediate pressure turbine,\n\tω_ip: rotor speed of intermediate pressure turbine,\n\tδ_lp: rotor angle of low pressure turbine,\n\tω_lp: rotor speed of low pressure turbine,\n\tδ_ex: rotor angle of exciter,\n\tω_lp: rotor speed of exciter",
          "internal_default": "[:δ, :ω, :δ_hp, :ω_hp, :δ_ip, :ω_ip, :δ_lp, :ω_lp, :δ_ex, :ω_ex]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "FiveMassShaft has 10 states",
          "internal_default": 10,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "Shaft"
    },
    {
      "struct_name": "TGFixed",
      "docstring": "Parameters of a fixed Turbine Governor that returns a fixed mechanical torque\n given by the product of P_ref*efficiency",
      "fields": [
        {
          "name": "efficiency",
          "comment": " Efficiency factor that multiplies P_ref",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "P_ref",
          "comment": "Reference Power Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "",
          "internal_default": "Vector{Symbol}()",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "TGFixed has no states",
          "internal_default": 0,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "TurbineGov"
    },
    {
      "struct_name": "GasTG",
      "docstring": "Parameters of Gas Turbine-Governor. GAST in PSSE and GAST_PTI in PowerWorld.",
      "fields": [
        {
          "name": "R",
          "comment": "Speed droop parameter",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 0.1
          }
        },
        {
          "name": "T1",
          "comment": "Governor time constant in s",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 0.5
          }
        },
        {
          "name": "T2",
          "comment": "Combustion chamber time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 0.5
          }
        },
        {
          "name": "T3",
          "comment": "Load limit time constant (exhaust gas measurement time)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 5.0
          }
        },
        {
          "name": "AT",
          "comment": "Ambient temperature load limit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          }
        },
        {
          "name": "Kt",
          "comment": "Load limit feedback gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 5
          }
        },
        {
          "name": "V_lim",
          "comment": "Operational control limits on fuel valve opening (V_min, V_max)",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "D_turb",
          "comment": "Speed damping coefficient of gas turbine rotor",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          }
        },
        {
          "name": "P_ref",
          "comment": "Reference Load Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the GAST model are:\n\tx_g1: Fuel valve opening,\n\tx_g2: Fuel flow,\n\tx_g3: Exhaust temperature load",
          "internal_default": "[:x_g1, :x_g2, :x_g3]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "GasTG has 3 states",
          "internal_default": 3,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "GAST has 3 differential states",
          "internal_default": "[StateTypes.Differential, StateTypes.Differential, StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "TurbineGov"
    },
    {
      "struct_name": "GeneralGovModel",
      "docstring": "GE General Governor/Turbine Model. The GeneralGovModel (GGOV1) model is a general purpose governor model used for a variety of prime movers controlled by proportional-integral-derivative (PID) governors including gas turbines.",
      "fields": [
        {
          "name": "Rselect",
          "comment": "Feedback signal for governor droop",
          "null_value": 1,
          "data_type": "Int",
          "valid_range": {
            "min": -2,
            "max": 1
          },
          "validation_action": "error"
        },
        {
          "name": "fuel_flag",
          "comment": "Flag Switch for fuel source characteristic",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": 1
          },
          "validation_action": "error"
        },
        {
          "name": "R",
          "comment": "Speed droop parameter",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Tpelec",
          "comment": "Electrical power transducer time constant, seconds",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "speed_error_signal",
          "comment": "Speed error signal limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Kp_gov",
          "comment": "Governor proportional gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Ki_gov",
          "comment": "Governor integral gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Kd_gov",
          "comment": "Governor derivative gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Td_gov",
          "comment": "Governor derivative time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "valve_position_limits",
          "comment": "Valve position limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "T_act",
          "comment": "Actuator time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "K_turb",
          "comment": "Turbine gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Wf_nl",
          "comment": "No load fuel flow, pu",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Tb",
          "comment": "Turbine lag time constant, sec",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Tc",
          "comment": "Turbine lead time constant, sec",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "T_eng",
          "comment": "Transport lag time constant for diesel engine, sec",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Tf_load",
          "comment": "Load limiter time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Kp_load",
          "comment": "Load limiter proportional gain for PI controller",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Ki_load",
          "comment": "Load integral gain for PI controller",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Ld_ref",
          "comment": "Load limiter integral gain for PI controller",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Dm",
          "comment": "Mechanical damping coefficient, pu",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "R_open",
          "comment": "Maximum valve opening rate, pu/sec",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "R_close",
          "comment": "Maximum valve closing rate, pu/sec",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Ki_mw",
          "comment": "Power controller (reset) gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "A_set",
          "comment": "Acceleration limiter setpoint, pu/sec",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Ka",
          "comment": "Acceleration limiter gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Ta",
          "comment": "Acceleration limiter time constant ",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": null
          },
          "validation_action": "error"
        },
        {
          "name": "T_rate",
          "comment": "Turbine rating",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "db",
          "comment": "Speed governor deadband",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Tsa",
          "comment": "Temperature detection lead time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "Tsb",
          "comment": "Temperature detection lag time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "R_lim",
          "comment": "Maximum rate of load increa",
          "null_value": "(up = 0.0, down = 0.0)",
          "data_type": "NamedTuple{(:up, :down), Tuple{Float64, Float64}}"
        },
        {
          "name": "P_ref",
          "comment": "Reference Power Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the GGOV1 model are:\n\tPe: Machine Electrical Power Measurement,\n\tx_g1: Governor differential control,\n\tx_g2: Governor integral control, \n\tx_g3: Turbine actuator, \n\tx_g4: Turbine Lead-Lag, \n\tx_g5: Turbine load limiter measurement, \n\tx_g6: Turbine Load Limiter Integral Control, \n\tx_g7: Supervisory Load Control, \n\tx_g8: Acceleration Control, \n\tx_g9 Temperature Detection Lead - Lag:",
          "internal_default": "[:Pe, :x_g1, :x_g2, :x_g3, :x_g4, :x_g5, :x_g6, :x_g7, :x_g8, :x_g9]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "GeneralGovModel has 10 states",
          "internal_default": 10,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "GGOV1 has 10 differential states",
          "internal_default": "[StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Differential, StateTypes.Hybrid]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "TurbineGov"
    },
    {
      "struct_name": "SteamTurbineGov1",
      "docstring": "Steam Turbine-Governor. This model considers both TGOV1 or TGOV1DU in PSS/E.",
      "fields": [
        {
          "name": "R",
          "comment": "Droop parameter",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.1
          },
          "validation_action": "warn"
        },
        {
          "name": "T1",
          "comment": "Governor time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 0.5
          },
          "validation_action": "error"
        },
        {
          "name": "valve_position_limits",
          "comment": "Valve position limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "T2",
          "comment": "Lead Lag Lead Time constant ",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "T3",
          "comment": "Lead Lag Lag Time constant ",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 10
          },
          "validation_action": "error"
        },
        {
          "name": "D_T",
          "comment": "Turbine Damping",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "DB_h",
          "comment": "Deadband for overspeed",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "DB_l",
          "comment": "Deadband for underspeed",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": null,
            "max": 0
          },
          "validation_action": "warn"
        },
        {
          "name": "T_rate",
          "comment": "Turbine Rate (MW). If zero, generator base is used.",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "P_ref",
          "comment": "Reference Power Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the SteamTurbineGov1 model are:\n\tx_g1: Valve Opening,\n\tx_g2: Lead-lag state",
          "internal_default": "[:x_g1, :x_g2]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "TGOV1 has 2 states",
          "internal_default": 2,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "TGOV1 has 2 differential states",
          "internal_default": "[StateTypes.Differential, StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "TurbineGov"
    },
    {
      "struct_name": "HydroTurbineGov",
      "docstring": "Hydro Turbine-Governor.",
      "fields": [
        {
          "name": "R",
          "comment": "Permanent droop parameter",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.1
          },
          "validation_action": "warn"
        },
        {
          "name": "r",
          "comment": "Temporary Droop",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 2
          },
          "validation_action": "warn"
        },
        {
          "name": "Tr",
          "comment": "Governor time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 30
          },
          "validation_action": "error"
        },
        {
          "name": "Tf",
          "comment": "Filter Time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 0.1
          },
          "valiation_action": "error"
        },
        {
          "name": "Tg",
          "comment": "Servo time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 1.0
          },
          "validation_action": "error"
        },
        {
          "name": "VELM",
          "comment": "gate velocity limit",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 0.3
          },
          "validation_action": "error"
        },
        {
          "name": "gate_position_limits",
          "comment": "Gate position limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Tw",
          "comment": "water time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 3.0
          },
          "validation_action": "error"
        },
        {
          "name": "At",
          "comment": "Turbine gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.8,
            "max": 1.5
          },
          "validation_action": "warn"
        },
        {
          "name": "D_T",
          "comment": "Turbine Damping",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "q_nl",
          "comment": "No-power flow",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "P_ref",
          "comment": "Reference Power Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the HydroTurbineGov model are:\n\tx_g1: filter_output,\n\tx_g2: desired gate, \n\tx_g3: gate opening, \n\tx_g4: turbine flow",
          "internal_default": "[:x_g1, :x_g2, :x_g3, :x_g4]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "HYGOV has 4 states",
          "internal_default": 4,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "HYGOV has 4 differential states",
          "internal_default": "[StateTypes.Differential, StateTypes.Differential, StateTypes.Differential, StateTypes.Differential]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "TurbineGov"
    },
    {
      "struct_name": "IEEETurbineGov1",
      "docstring": "IEEE Type 1 Speed-Governing Model",
      "fields": [
        {
          "name": "K",
          "comment": "Governor Gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 5,
            "max": 30
          },
          "validation_action": "warn"
        },
        {
          "name": "T1",
          "comment": "Input Filter Lag",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 5
          },
          "validation_action": "warn"
        },
        {
          "name": "T2",
          "comment": "Input Filter Lead",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "T3",
          "comment": "Valve position Time Constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": "eps()",
            "max": 1
          },
          "validation_action": "error"
        },
        {
          "name": "U0",
          "comment": "Maximum Valve Opening Rate",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0.01,
            "max": 0.03
          },
          "validation_action": "warn"
        },
        {
          "name": "U_c",
          "comment": "Maximum Valve closing rate",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": -0.3,
            "max": 0.0
          },
          "validation_action": "warn"
        },
        {
          "name": "valve_position_limits",
          "comment": "Valve position limits in MW",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "T4",
          "comment": "Time Constant inlet steam",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1.0
          },
          "validation_action": "warn"
        },
        {
          "name": "K1",
          "comment": "Fraction of high presure shaft power",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": -2,
            "max": 1
          },
          "validation_action": "warn"
        },
        {
          "name": "K2",
          "comment": "Fraction of low presure shaft power",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "validation_action": "warn"
        },
        {
          "name": "T5",
          "comment": "Time constant for second boiler pass",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "K3",
          "comment": "Fraction of high presure shaft power second boiler pass",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "K4",
          "comment": "Fraction of low presure shaft power second boiler pass",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.5
          },
          "validation_action": "warn"
        },
        {
          "name": "T6",
          "comment": "Time constant for third boiler pass",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "K5",
          "comment": "Fraction of high presure shaft power third boiler pass",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.35
          },
          "validation_action": "warn"
        },
        {
          "name": "K6",
          "comment": "Fraction of low presure shaft power third boiler pass",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.55
          },
          "validation_action": "warn"
        },
        {
          "name": "T7",
          "comment": "Time constant for fourth boiler pass",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 10
          },
          "validation_action": "warn"
        },
        {
          "name": "K7",
          "comment": "Fraction of high presure shaft power fourth boiler pass",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.3
          },
          "validation_action": "warn"
        },
        {
          "name": "K8",
          "comment": "Fraction of low presure shaft power fourth boiler pass",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 0.3
          },
          "validation_action": "warn"
        },
        {
          "name": "P_ref",
          "comment": "Reference Power Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the IEEETurbineGov model are:\n\tx_g1: First Governor integrator,\n\tx_g2: Governor output,\n\tx_g3: First Turbine integrator, \n\tx_g4: Second Turbine Integrator, \n\tx_g5: Third Turbine Integrator, \n\tx_g6: Fourth Turbine Integrator, ",
          "internal_default": "[:x_g1, :x_g2, :x_g3, :x_g4, :x_g5, :x_g6]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "IEEEG1 has 6 states",
          "internal_default": 6,
          "data_type": "Int"
        },
        {
          "name": "states_types",
          "comment": "IEEEG1 has 6 differential states",
          "internal_default": "[StateTypes.Differential, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid, StateTypes.Hybrid]",
          "data_type": "Vector{StateTypes}"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "TurbineGov"
    },
    {
      "struct_name": "TGTypeI",
      "docstring": "Parameters of a Turbine Governor Type I.",
      "fields": [
        {
          "name": "R",
          "comment": "Droop parameter",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Ts",
          "comment": "Governor time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Tc",
          "comment": "Servo time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "T3",
          "comment": "Transient gain time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "T4",
          "comment": "Power fraction time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "T5",
          "comment": "Reheat time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "valve_position_limits",
          "comment": "Valve position limits in MW",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "P_ref",
          "comment": "Reference Power Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the TGTypeI model are:\n\tx_g1: Governor state,\n\tx_g2: Servo state,\n\tx_g3: Reheat state",
          "internal_default": "[:x_g1, :x_g2, :x_g3]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "TGTypeI has 3 states",
          "internal_default": 3,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "TurbineGov"
    },
    {
      "struct_name": "TGTypeII",
      "docstring": "Parameters of a Turbine Governor Type II.",
      "fields": [
        {
          "name": "R",
          "comment": "Droop parameter",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "T1",
          "comment": "Transient gain time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "T2",
          "comment": "Power fraction time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "τ_limits",
          "comment": "Power into the governor limits",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "P_ref",
          "comment": "Reference Power Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the TGTypeI model are:\n\tx_g1: lead-lag state",
          "internal_default": "[:xg]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "TGTypeII has 1 state",
          "internal_default": 1,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "TurbineGov"
    },
    {
      "struct_name": "AverageConverter",
      "docstring": "Parameters of an average converter model",
      "fields": [
        {
          "name": "rated_voltage",
          "comment": "rated voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "rated_current",
          "comment": "rated VA",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "",
          "internal_default": "Vector{Symbol}()",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "AverageConverter has no states",
          "internal_default": 0,
          "data_type": "Int"
        }
      ],
      "supertype": "Converter"
    },
    {
      "struct_name": "RenewableEnergyConverterTypeA",
      "docstring": "Parameters of a renewable energy generator/converter model, this model corresponds to REGCA1 in PSSE",
      "fields": [
        {
          "name": "T_g",
          "comment": "Converter time constant (s)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Rrpwr",
          "comment": "Low Voltage Power Logic (LVPL) ramp rate limit (pu/s)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Brkpt",
          "comment": "LVPL characteristic voltage 2 (pu)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Zerox",
          "comment": "LVPL characteristic voltage 1 (pu)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Lvpl1",
          "comment": "LVPL gain (pu)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Vo_lim",
          "comment": "Voltage limit for high voltage reactive current management (pu)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Lv_pnts",
          "comment": "Voltage points for low voltage active current management (pu) (Lvpnt0, Lvpnt1)",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Io_lim",
          "comment": "Current limit (pu) for high voltage reactive current management (specified as a negative value)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": null,
            "max": 0
          }
        },
        {
          "name": "T_fltr",
          "comment": "Voltage filter time constant for low voltage active current management (s)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "K_hv",
          "comment": "Overvoltage compensation gain used in the high voltage reactive current management",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Iqr_lims",
          "comment": "Limit on rate of change for reactive current (pu/s) (Iqr_min, Iqr_max)",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "Accel",
          "comment": "Acceleration factor",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": 1
          }
        },
        {
          "name": "Lvpl_sw",
          "comment": "Low voltage power logic (LVPL) switch. (0: LVPL not present, 1: LVPL present)",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": 1
          }
        },
        {
          "name": "Q_ref",
          "comment": "Initial machine reactive power from power flow",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "R_source",
          "comment": "Output resistor used for the Thevenin Equivalent",
          "null_value": 0,
          "default": "0.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "X_source",
          "comment": "Output resistor used for the Thevenin Equivalent",
          "null_value": 0,
          "default": "1.0e5",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states are:\tIp: Converter lag for Ipcmd,\tIq: Converter lag for Iqcmd,\tVmeas: Voltage filter for low voltage active current management",
          "internal_default": "[:Ip, :Iq, :Vmeas]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "RenewableEnergyConverterTypeA has 3 states",
          "internal_default": 3,
          "data_type": "Int"
        }
      ],
      "supertype": "Converter"
    },
    {
      "struct_name": "FixedDCSource",
      "docstring": "Parameters of a Fixed DC Source that returns a fixed DC voltage",
      "fields": [
        {
          "name": "voltage",
          "comment": "rated VA",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "",
          "internal_default": "Vector{Symbol}()",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "FixedDCSource has no states",
          "internal_default": 0,
          "data_type": "Int"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "DCSource"
    },
    {
      "struct_name": "ZeroOrderBESS",
      "docstring": "Parameters for the DC-side with a Battery Energy Storage System from paper at https://arxiv.org/abs/2007.11776",
      "fields": [
        {
          "name": "rated_voltage",
          "comment": "rated voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "rated_current",
          "comment": "rated current",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "battery_voltage",
          "comment": "battery voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "battery_resistance",
          "comment": "battery_resistance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "dc_dc_inductor",
          "comment": "DC/DC inductance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "dc_link_capacitance",
          "comment": "DC-link capacitor",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "fs",
          "comment": "DC/DC converter switching frequency",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "kpv",
          "comment": "voltage controller proportional gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "kiv",
          "comment": "voltage controller integral gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "kpi",
          "comment": "current controller proportional gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "kii",
          "comment": "current controller integral gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Vdc_ref",
          "comment": "Reference DC-Voltage Set-point",
          "null_value": 0,
          "default": "1.1",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the ZeroOrderBESS model are:\n\tv_dc: DC-link votlage,\n\ti_b: Battery current,\n\t ν: integrator state of the voltage controller,\n\t ζ: integrator state of the PI current controller",
          "internal_default": "[:v_dc, :i_b, :ν, :ζ]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "ZeroOrderBESS has 4 states",
          "internal_default": 4,
          "data_type": "Int"
        }
      ],
      "supertype": "DCSource"
    },
    {
      "struct_name": "LCLFilter",
      "docstring": "Parameters of a LCL filter outside the converter, the states are in the grid's reference frame",
      "fields": [
        {
          "name": "lf",
          "comment": "Series inductance in p.u. of converter filter",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "rf",
          "comment": "Series resistance in p.u. of converter filter",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "cf",
          "comment": "Shunt capacitance in p.u. of converter filter",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "lg",
          "comment": "Series inductance in p.u. of converter filter to the grid",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "rg",
          "comment": "Series resistance in p.u. of converter filter to the grid",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the LCLFilter model are:\n\tir_cnv: Real current out of the converter,\n\tii_cnv: Imaginary current out of the converter,\n\tvr_filter: Real voltage at the filter's capacitor,\n\tvi_filter: Imaginary voltage at the filter's capacitor,\n\tir_filter: Real current out of the filter,\n\tii_filter: Imaginary current out of the filter",
          "internal_default": "[:ir_cnv, :ii_cnv, :vr_filter, :vi_filter, :ir_filter, :ii_filter]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "LCLFilter has 6 states",
          "internal_default": 6,
          "data_type": "Int"
        }
      ],
      "supertype": "Filter"
    },
    {
      "struct_name": "LCFilter",
      "docstring": "Parameters of a LCL filter outside the converter",
      "fields": [
        {
          "name": "lf",
          "comment": "filter inductance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "rf",
          "comment": "filter resistance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "cf",
          "comment": "filter capacitance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the LCFilter model are:\n\tir_filter: Real current out of the filter,\n\tii_filter: Imaginary current out of the filter",
          "internal_default": "[:ir_filter, :ii_filter]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "LCFilter has two states",
          "internal_default": 2,
          "data_type": "Int"
        }
      ],
      "supertype": "Filter"
    },
    {
      "struct_name": "RLFilter",
      "docstring": "Parameters of RL series filter in algebraic representation",
      "fields": [
        {
          "name": "rf",
          "comment": "Series resistance in p.u. of converter filter to the grid",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "lf",
          "comment": "Series inductance in p.u. of converter filter to the grid",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "RLFilter has zero states",
          "internal_default": "Vector{Symbol}()",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "RLFilter has zero states",
          "internal_default": 0,
          "data_type": "Int"
        }
      ],
      "supertype": "Filter"
    },
    {
      "struct_name": "KauraPLL",
      "docstring": "Parameters of a Phase-Locked Loop (PLL) based on Kaura, Vikram, and Vladimir Blasko.\n\"Operation of a phase locked loop system under distorted utility conditions.\"\nIEEE Transactions on Industry applications 33.1 (1997): 58-63.",
      "fields": [
        {
          "name": "ω_lp",
          "comment": "PLL low-pass filter frequency (rad/sec)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "kp_pll",
          "comment": "PLL proportional gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ki_pll",
          "comment": "PLL integral gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the KauraPLL model are:\n\tvd_pll: d-axis of the measured voltage in the PLL synchronous reference frame (SRF),\n\tvq_pll: q-axis of the measured voltage in the PLL SRF,\n\tε_pll: Integrator state of the PI controller,\n\tθ_pll: Phase angle displacement in the PLL SRF",
          "internal_default": "[:vd_pll, :vq_pll, :ε_pll, :θ_pll]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "KauraPLL has 4 states",
          "internal_default": 4,
          "data_type": "Int"
        }
      ],
      "supertype": "FrequencyEstimator"
    },
    {
      "struct_name": "ReducedOrderPLL",
      "docstring": "Parameters of a Phase-Locked Loop (PLL) based on Purba, Dhople, Jafarpour, Bullo and Johnson.\n\"Reduced-order Structure-preserving Model for Parallel-connected Three-phase Grid-tied Inverters.\"\n2017 IEEE 18th Workshop on Control and Modeling for Power Electronics (COMPEL): 1-7.",
      "fields": [
        {
          "name": "ω_lp",
          "comment": "PLL low-pass filter frequency (rad/sec)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "kp_pll",
          "comment": "PLL proportional gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ki_pll",
          "comment": "PLL integral gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the ReducedOrderPLL model are:\n\tvq_pll: q-axis of the measured voltage in the PLL synchronous reference frame (SRF),\n\tε_pll: Integrator state of the PI controller,\n\tθ_pll: Phase angle displacement in the PLL SRF",
          "internal_default": "[:vq_pll, :ε_pll, :θ_pll]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "ReducedOrderPLL has 3 states",
          "internal_default": 3,
          "data_type": "Int"
        }
      ],
      "supertype": "FrequencyEstimator"
    },
    {
      "struct_name": "FixedFrequency",
      "docstring": "Parameters of a Fixed Frequency Estimator (i.e. no PLL).",
      "fields": [
        {
          "name": "frequency",
          "comment": "Reference used",
          "null_value": 0,
          "data_type": "Float64",
          "default": "1.0"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "FixedFrequency has no states",
          "internal_default": "Vector{Symbol}()",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "FixedFrequency has no states",
          "internal_default": 0,
          "data_type": "Int"
        }
      ],
      "supertype": "FrequencyEstimator"
    },
    {
      "struct_name": "VirtualInertia",
      "docstring": "Parameters of a Virtual Inertia with SRF using VSM for active power controller",
      "fields": [
        {
          "name": "Ta",
          "comment": "VSM inertia constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "kd",
          "comment": "VSM damping constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "kω",
          "comment": "frequency droop gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "P_ref",
          "comment": "Reference Power Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the VirtualInertia model are:\n\tθ_oc: Phase angle displacement of the virtual synchronous generator model\n\tω_oc: Speed of the rotating reference frame of the virtual synchronous generator model",
          "internal_default": "[:θ_oc, :ω_oc]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "VirtualInertia has two states",
          "internal_default": 2,
          "data_type": "Int"
        }
      ],
      "supertype": "ActivePowerControl"
    },
    {
      "struct_name": "ActivePowerDroop",
      "docstring": "Parameters of an Active Power droop controller",
      "fields": [
        {
          "name": "Rp",
          "comment": "Droop Gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ωz",
          "comment": "filter frequency cutoff",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "P_ref",
          "comment": "Reference Power Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the ActivePowerDroop model are:\n\tθ_oc: Phase angle displacement of the inverter model,\n\tp_oc: Measured active power of the inverter model",
          "internal_default": "[:θ_oc, :p_oc]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "ActivePowerDroop has two states",
          "internal_default": 2,
          "data_type": "Int"
        }
      ],
      "supertype": "ActivePowerControl"
    },
    {
      "struct_name": "ActivePowerPI",
      "docstring": "Parameters of a Proportional-Integral Active Power controller for a specified power reference",
      "fields": [
        {
          "name": "Kp_p",
          "comment": "Proportional Gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Ki_p",
          "comment": "Integral Gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ωz",
          "comment": "filter frequency cutoff",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "P_ref",
          "comment": "Reference Power Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the ActivePowerPI model are:\n\tσp_oc: Integrator state of the PI Controller,\n\tp_oc: Measured active power of the inverter model",
          "internal_default": "[:σp_oc, :p_oc]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "ActivePowerPI has two states",
          "internal_default": 2,
          "data_type": "Int"
        }
      ],
      "supertype": "ActivePowerControl"
    },
    {
      "struct_name": "ActiveRenewableControllerAB",
      "docstring": "Parameters of Active Power Controller including REPCA1 and REECB1",
      "fields": [
        {
          "name": "bus_control",
          "comment": "Bus Number for voltage control; ",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "from_branch_control",
          "comment": "Monitored branch FROM bus number for line drop compensation (if 0 generator power will be used)",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "to_branch_control",
          "comment": "Monitored branch TO bus number for line drop compensation (if 0 generator power will be used)",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "branch_id_control",
          "comment": "Branch circuit id for line drop compensation (as a string). If 0 generator power will be used",
          "null_value": 0,
          "data_type": "String"
        },
        {
          "name": "Freq_Flag",
          "comment": "Frequency Flag for REPCA1: 0: disable, 1:enable",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": 1
          }
        },
        {
          "name": "K_pg",
          "comment": "Active power PI control proportional gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "K_ig",
          "comment": "Active power PI control integral gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "T_p",
          "comment": "Real power measurement filter time constant (s)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "fdbd_pnts",
          "comment": "Frequency error dead band thresholds `(fdbd1, fdbd2)`",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "fe_lim",
          "comment": "Upper/Lower limit on frequency error `(fe_min, fe_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "P_lim",
          "comment": "Upper/Lower limit on power reference `(P_min, P_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "T_g",
          "comment": "Power Controller lag time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "D_dn",
          "comment": "Droop for over-frequency conditions",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": null,
            "max": 0
          }
        },
        {
          "name": "D_up",
          "comment": "Droop for under-frequency conditions",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "dP_lim",
          "comment": "Upper/Lower limit on power reference ramp rates`(dP_min, dP_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "P_lim_inner",
          "comment": "Upper/Lower limit on power reference for REECB`(P_min_inner, P_max_inner)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "T_pord",
          "comment": "Power filter time constant REECB time constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "P_ref",
          "comment": "Reference Power Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the ActiveRenewableControllerAB model depends on the Flag",
          "internal_default": "PowerSystems.get_activeRETypeAB_states(Freq_Flag)[1]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "The states of the ActiveRenewableControllerAB model depends on the Flag",
          "internal_default": "PowerSystems.get_activeRETypeAB_states(Freq_Flag)[2]",
          "data_type": "Int"
        }
      ],
      "supertype": "ActivePowerControl"
    },
    {
      "struct_name": "ReactiveRenewableControllerAB",
      "docstring": "Parameters of Reactive Power Controller including REPCA1 and REECB1",
      "fields": [
        {
          "name": "bus_control",
          "comment": "Bus Number for voltage control; ",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "from_branch_control",
          "comment": "Monitored branch FROM bus number for line drop compensation (if 0 generator power will be used)",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "to_branch_control",
          "comment": "Monitored branch TO bus number for line drop compensation (if 0 generator power will be used)",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "branch_id_control",
          "comment": "Branch circuit id for line drop compensation (as a string). If 0 generator power will be used",
          "null_value": 0,
          "data_type": "String"
        },
        {
          "name": "VC_Flag",
          "comment": "Voltage Compensator Flag for REPCA1",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": 1
          }
        },
        {
          "name": "Ref_Flag",
          "comment": "Flag for Reactive Power Control for REPCA1. 0: Q-control, 1: V-control",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": 1
          }
        },
        {
          "name": "PF_Flag",
          "comment": "Flag for Power Factor Control for Outer Control of REECB1. 0: Q-control, 1: Power Factor Control",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": 1
          }
        },
        {
          "name": "V_Flag",
          "comment": "Flag for Voltage Control for Outer Control of REECB1. 0: Voltage Control, 1: Q-Control",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": 1
          }
        },
        {
          "name": "T_fltr",
          "comment": "Voltage or Q-power of REPCA Filter Time Constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "K_p",
          "comment": "Reactive power PI control proportional gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "K_i",
          "comment": "Reactive power PI control integral gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "T_ft",
          "comment": "Reactive power lead time constant (s)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "T_fv",
          "comment": "Reactive power lag time constant (s)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "V_frz",
          "comment": "Voltage below which state ξq_oc (integrator state) is freeze",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "R_c",
          "comment": "Line drop compensation resistance (used when VC_Flag = 1)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "X_c",
          "comment": "Line drop compensation reactance (used when VC_Flag = 1)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "K_c",
          "comment": "Reactive current compensation gain (pu) (used when VC_Flag = 0)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "e_lim",
          "comment": "Upper/Lower limit on Voltage or Q-power deadband output `(e_min, e_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "dbd_pnts",
          "comment": "Voltage or Q-power error dead band thresholds `(dbd1, dbd2)`",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "Q_lim",
          "comment": "Upper/Lower limit on reactive power V/Q control in REPCA `(Q_min, Q_max)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "T_p",
          "comment": "Active power lag time constant in REECB (s). Used only when PF_Flag = 1",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Q_lim_inner",
          "comment": "Upper/Lower limit on reactive power input in REECB `(Q_min_inner, Q_max_inner)`. Only used when V_Flag = 1",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "V_lim",
          "comment": "Upper/Lower limit on reactive power PI controller in REECB `(V_min, V_max)`. Only used when V_Flag = 1",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "K_qp",
          "comment": "Reactive power regulator proportional gain (used when V_Flag = 1)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "K_qi",
          "comment": "Reactive power regulator integral gain (used when V_Flag = 1)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Q_ref",
          "comment": "Reference Power Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the ReactiveRenewableControllerAB model depends on the Flag",
          "internal_default": "PowerSystems.get_reactiveRETypeAB_states(Ref_Flag, PF_Flag, V_Flag)[1]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "The states of the ReactiveRenewableControllerAB model depends on the Flag",
          "internal_default": "PowerSystems.get_reactiveRETypeAB_states(Ref_Flag, PF_Flag, V_Flag)[2]",
          "data_type": "Int"
        }
      ],
      "supertype": "ReactivePowerControl"
    },
    {
      "struct_name": "ReactivePowerDroop",
      "docstring": "Parameters of a Reactive Power droop controller",
      "fields": [
        {
          "name": "kq",
          "comment": "frequency droop gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ωf",
          "comment": "filter frequency cutoff",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "V_ref",
          "comment": "Reference Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the ReactivePowerDroop model are:\n\tq_oc: Filtered reactive output power",
          "internal_default": "[:q_oc]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "ReactivePowerDroop has 1 state",
          "internal_default": 1,
          "data_type": "Int"
        }
      ],
      "supertype": "ReactivePowerControl"
    },
    {
      "struct_name": "ReactivePowerPI",
      "docstring": "Parameters of a Proportional-Integral Reactive Power controller for a specified power reference",
      "fields": [
        {
          "name": "Kp_q",
          "comment": "Proportional Gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Ki_q",
          "comment": "Integral Gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ωf",
          "comment": "filter frequency cutoff",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "V_ref",
          "comment": "Voltage Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Q_ref",
          "comment": "Reactive Power Set-point",
          "null_value": 0,
          "default": "1.0",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the ReactivePowerPI model are:\n\tσq_oc: Integrator state of the PI Controller,\n\tq_oc: Measured reactive power of the inverter model",
          "internal_default": "[:σq_oc, :q_oc]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "ReactivePowerPI has two states",
          "internal_default": 2,
          "data_type": "Int"
        }
      ],
      "supertype": "ReactivePowerControl"
    },
    {
      "struct_name": "VoltageModeControl",
      "docstring": "Parameters of an inner loop current control PID using virtual impedance based on D'Arco, Suul and Fosso.\n\"A Virtual Synchronous Machine implementation for distributed control of power converters in SmartGrids.\"\nElectric Power Systems Research 122 (2015) 180–197.",
      "fields": [
        {
          "name": "kpv",
          "comment": "voltage controller proportional gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "kiv",
          "comment": "voltage controller integral gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "kffv",
          "comment": "Binary variable to enable feed-forward gain of voltage.",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "rv",
          "comment": "virtual resistance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "lv",
          "comment": "virtual inductance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "kpc",
          "comment": "current controller proportional gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "kic",
          "comment": "current controller integral gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "kffi",
          "comment": "Binary variable to enable feed-forward gain of current",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ωad",
          "comment": "active damping filter cutoff frequency (rad/sec)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "kad",
          "comment": "active damping gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the VoltageModeControl model are:\n\tξd_ic: d-axis integrator state of the PI voltage controller,\n\tξq_ic: q-axis integrator state of the PI voltage controller,\n\tγd_ic: d-axis integrator state of the PI current controller,\n\tγq_ic: q-axis integrator state of the PI current controller,\n\tϕd_ic: d-axis low-pass filter of active damping,\n\tϕq_ic: q-axis low-pass filter of active damping",
          "internal_default": "[:ξd_ic, :ξq_ic, :γd_ic, :γq_ic, :ϕd_ic, :ϕq_ic]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "VoltageModeControl has 6 states",
          "internal_default": 6,
          "data_type": "Int"
        }
      ],
      "supertype": "InnerControl"
    },
    {
      "struct_name": "CurrentModeControl",
      "docstring": "Parameters of an inner loop PI current control using based on Purba, Dhople, Jafarpour, Bullo and Johnson.\n\"Reduced-order Structure-preserving Model for Parallel-connected Three-phase Grid-tied Inverters.\"\n2017 IEEE 18th Workshop on Control and Modeling for Power Electronics (COMPEL): 1-7.",
      "fields": [
        {
          "name": "kpc",
          "comment": "Current controller proportional gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "kic",
          "comment": "Current controller integral gain",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "kffv",
          "comment": "Gain to enable feed-forward gain of voltage.",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the CurrentModeControl model are:\n\tγd_ic: d-axis integrator state of the PI current controller,\n\tγq_ic: q-axis integrator state of the PI current controller",
          "internal_default": "[:γd_ic, :γq_ic]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "CurrentControl has 2 states",
          "internal_default": 2,
          "data_type": "Int"
        }
      ],
      "supertype": "InnerControl"
    },
    {
      "struct_name": "RECurrentControlB",
      "docstring": "Parameters of the Inner Control part of the REECB model in PSS/E",
      "fields": [
        {
          "name": "Q_Flag",
          "comment": "Q Flag used for I_qinj",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": 1
          }
        },
        {
          "name": "PQ_Flag",
          "comment": "PQ Flag used for the Current Limit Logic",
          "null_value": 0,
          "data_type": "Int",
          "valid_range": {
            "min": 0,
            "max": 1
          }
        },
        {
          "name": "Vdip_lim",
          "comment": "Limits for Voltage Dip Logic `(Vdip, Vup)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "T_rv",
          "comment": "Voltage Filter Time Constant",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "dbd_pnts",
          "comment": "Voltage error deadband thresholds `(dbd1, dbd2)`",
          "null_value": "(0.0, 0.0)",
          "data_type": "Tuple{Float64, Float64}"
        },
        {
          "name": "K_qv",
          "comment": "Reactive current injection gain during over and undervoltage conditions",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "Iqinj_lim",
          "comment": "Limits for Iqinj `(I_qh1, I_ql1)`",
          "null_value": "(min=0.0, max=0.0)",
          "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}"
        },
        {
          "name": "V_ref0",
          "comment": "User defined reference. If 0, PSID initializes to initial terminal voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "K_vp",
          "comment": "Voltage regulator proportional gain (used when QFlag = 1)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "K_vi",
          "comment": "Voltage regulator integral gain (used when QFlag = 1)",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "T_iq",
          "comment": "Time constant for low-pass filter for state q_V when QFlag = 0",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "I_max",
          "comment": "Maximum limit on total converter current",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "The states of the RECurrentControlB depends on the Flags",
          "internal_default": "PowerSystems.get_REControlB_states(Q_Flag)",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "comment": "The states of the RECurrentControlB depends on the Flags",
          "internal_default": "2",
          "data_type": "Int"
        }
      ],
      "supertype": "InnerControl"
    },
    {
      "struct_name": "Source",
      "docstring": "This struct acts as an infinity bus.",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "null_value": "false",
          "name": "available",
          "data_type": "Bool"
        },
        {
          "name": "bus",
          "null_value": "Bus(nothing)",
          "data_type": "Bus"
        },
        {
          "name": "active_power",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "reactive_power",
          "null_value": "0.0",
          "data_type": "Float64"
        },
        {
          "name": "R_th",
          "comment": "Source Thevenin resistance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "X_th",
          "comment": "Source Thevenin reactance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "internal_voltage",
          "comment": "Internal Voltage",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          },
          "default": "1.0"
        },
        {
          "name": "internal_angle",
          "comment": "Internal Angle",
          "null_value": 0,
          "data_type": "Float64",
          "default": "0.0"
        },
        {
          "name": "dynamic_injector",
          "data_type": "Union{Nothing, DynamicInjection}",
          "comment": "corresponding dynamic injection device",
          "null_value": "nothing",
          "exclude_setter": true,
          "default": "nothing"
        },
        {
          "name": "services",
          "data_type": "Vector{Service}",
          "comment": "Services that this device contributes to",
          "null_value": "Device[]",
          "default": "Device[]"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "StaticInjection"
    },
    {
      "struct_name": "PeriodicVariableSource",
      "docstring": "This struct acts as an infinity bus with time varying phasor values magnitude and angle V(t) \theta(t). Time varying functions are represented using fourier series",
      "fields": [
        {
          "null_value": "init",
          "name": "name",
          "exclude_setter": true,
          "data_type": "String"
        },
        {
          "name": "R_th",
          "comment": "Source Thevenin resistance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "X_th",
          "comment": "Source Thevenin reactance",
          "null_value": 0,
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "internal_voltage_bias",
          "comment": "a0 term of the Fourier Series for the voltage",
          "null_value": 0.0,
          "data_type": "Float64",
          "default": "0.0"
        },
        {
          "name": "internal_voltage_frequencies",
          "comment": "Frequencies in radians/s",
          "null_value": [
            0.0
          ],
          "data_type": "Vector{Float64}",
          "default": "[0.0]"
        },
        {
          "name": "internal_voltage_coefficients",
          "comment": "Coefficients for terms n > 1. First component corresponds to sin and second component to cos",
          "null_value": "[(0.0, 0.0)]",
          "data_type": "Vector{Tuple{Float64,Float64}}",
          "default": "[(0.0, 0.0)]"
        },
        {
          "name": "internal_angle_bias",
          "comment": "a0 term of the Fourier Series for the angle",
          "null_value": 0.0,
          "data_type": "Float64",
          "default": "0.0"
        },
        {
          "name": "internal_angle_frequencies",
          "comment": "Frequencies in radians/s",
          "null_value": [
            0.0
          ],
          "data_type": "Vector{Float64}",
          "default": "[0.0]"
        },
        {
          "name": "internal_angle_coefficients",
          "comment": "Coefficients for terms n > 1. First component corresponds to sin and second component to cos",
          "null_value": "[(0.0, 0.0)]",
          "data_type": "Vector{Tuple{Float64,Float64}}",
          "default":"[(0.0, 0.0)]"
        },
        {
          "name": "base_power",
          "comment": "Base power",
          "null_value": 0.0,
          "data_type": "Float64",
          "default": "100.0"
        },
        {
          "name": "states",
          "exclude_setter": true,
          "comment": "State for time, voltage and angle",
          "internal_default": "[:Vt, :θt]",
          "data_type": "Vector{Symbol}"
        },
        {
          "name": "n_states",
          "exclude_setter": true,
          "null_value": 2,
          "internal_default": 2,
          "data_type": "Int"
        },
        {
          "name": "ext",
          "data_type": "Dict{String, Any}",
          "null_value": "Dict{String, Any}()",
          "default": "Dict{String, Any}()"
        },
        {
          "name": "internal",
          "comment": "power system internal reference, do not modify",
          "data_type": "InfrastructureSystemsInternal",
          "internal_default": "InfrastructureSystemsInternal()",
          "exclude_setter": true
        }
      ],
      "supertype": "DynamicInjection"
    }
  ],
  "struct_validation_descriptors": [
    {
      "struct_name": "RegulationDevice",
      "fields": [
        {
          "name": "device"
        },
        {
          "name": "droop",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "participation_factor",
          "data_type": "NamedTuple{(:up, :down), Tuple{Float64, Float64}}"
        },
        {
          "name": "reserve_limit_dn",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "reserve_limit_up",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "inertia",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "cost",
          "data_type": "Float64",
          "valid_range": {
            "min": 0,
            "max": null
          }
        },
        {
          "name": "time_series_container",
          "data_type": "InfrastructureSystems.TimeSeriesContainer"
        },
        {
          "name": "internal",
          "data_type": "InfrastructureSystems.InfrastructureSystemsInternal"
        }
      ]
    }
  ]
}
